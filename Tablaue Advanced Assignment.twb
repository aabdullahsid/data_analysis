<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0611.2007                               -->
<workbook original-version='18.1' source-build='2023.2.0 (20232.23.0611.2007)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-on' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top city' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
      </column>
    </datasource>
    <datasource caption='Orders+ (Sample - Superstore)' inline='true' name='federated.02gtcc80zihlhl1295smv0bkkecw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.0yw6se61x9d807101p99x1qozys0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/DWH &amp; BI/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Orders].[Order ID]' />
              <expression op='[Returns].[Order ID]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Orders].[Region]' />
                <expression op='[People].[Region]' />
              </expression>
            </clause>
            <relation connection='excel-direct.0yw6se61x9d807101p99x1qozys0' name='Orders' table='[Orders$]' type='table'>
              <columns gridOrigin='A1:U9996:no:A1:U9996:0' header='yes' outcome='6'>
                <column datatype='integer' name='Row ID' ordinal='0' />
                <column datatype='string' name='Order ID' ordinal='1' />
                <column datatype='date' name='Order Date' ordinal='2' />
                <column datatype='date' name='Ship Date' ordinal='3' />
                <column datatype='string' name='Ship Mode' ordinal='4' />
                <column datatype='string' name='Customer ID' ordinal='5' />
                <column datatype='string' name='Customer Name' ordinal='6' />
                <column datatype='string' name='Segment' ordinal='7' />
                <column datatype='string' name='Country' ordinal='8' />
                <column datatype='string' name='City' ordinal='9' />
                <column datatype='string' name='State' ordinal='10' />
                <column datatype='integer' name='Postal Code' ordinal='11' />
                <column datatype='string' name='Region' ordinal='12' />
                <column datatype='string' name='Product ID' ordinal='13' />
                <column datatype='string' name='Category' ordinal='14' />
                <column datatype='string' name='Sub-Category' ordinal='15' />
                <column datatype='string' name='Product Name' ordinal='16' />
                <column datatype='real' name='Sales' ordinal='17' />
                <column datatype='integer' name='Quantity' ordinal='18' />
                <column datatype='real' name='Discount' ordinal='19' />
                <column datatype='real' name='Profit' ordinal='20' />
              </columns>
            </relation>
            <relation connection='excel-direct.0yw6se61x9d807101p99x1qozys0' name='People' table='[People$]' type='table'>
              <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
                <column datatype='string' name='Person' ordinal='0' />
                <column datatype='string' name='Region' ordinal='1' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.0yw6se61x9d807101p99x1qozys0' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:B297:no:A1:B297:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Orders].[Order ID]' />
              <expression op='[Returns].[Order ID]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Orders].[Region]' />
                <expression op='[People].[Region]' />
              </expression>
            </clause>
            <relation connection='excel-direct.0yw6se61x9d807101p99x1qozys0' name='Orders' table='[Orders$]' type='table'>
              <columns gridOrigin='A1:U9996:no:A1:U9996:0' header='yes' outcome='6'>
                <column datatype='integer' name='Row ID' ordinal='0' />
                <column datatype='string' name='Order ID' ordinal='1' />
                <column datatype='date' name='Order Date' ordinal='2' />
                <column datatype='date' name='Ship Date' ordinal='3' />
                <column datatype='string' name='Ship Mode' ordinal='4' />
                <column datatype='string' name='Customer ID' ordinal='5' />
                <column datatype='string' name='Customer Name' ordinal='6' />
                <column datatype='string' name='Segment' ordinal='7' />
                <column datatype='string' name='Country' ordinal='8' />
                <column datatype='string' name='City' ordinal='9' />
                <column datatype='string' name='State' ordinal='10' />
                <column datatype='integer' name='Postal Code' ordinal='11' />
                <column datatype='string' name='Region' ordinal='12' />
                <column datatype='string' name='Product ID' ordinal='13' />
                <column datatype='string' name='Category' ordinal='14' />
                <column datatype='string' name='Sub-Category' ordinal='15' />
                <column datatype='string' name='Product Name' ordinal='16' />
                <column datatype='real' name='Sales' ordinal='17' />
                <column datatype='integer' name='Quantity' ordinal='18' />
                <column datatype='real' name='Discount' ordinal='19' />
                <column datatype='real' name='Profit' ordinal='20' />
              </columns>
            </relation>
            <relation connection='excel-direct.0yw6se61x9d807101p99x1qozys0' name='People' table='[People$]' type='table'>
              <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
                <column datatype='string' name='Person' ordinal='0' />
                <column datatype='string' name='Region' ordinal='1' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.0yw6se61x9d807101p99x1qozys0' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:B297:no:A1:B297:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Person]' value='[People].[Person]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (People)]' value='[People].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9996:no:A1:U9996:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[People]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B5:no:A1:B5:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B297:no:A1:B297:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (People)]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.02gtcc80zihlhl1295smv0bkkecw].[pcto:sum:Sales:qk:2]&quot;' value='SalesShare' />
          <alias key='&quot;[federated.02gtcc80zihlhl1295smv0bkkecw].[pcto:sum:Sales:qk]&quot;' value='Sales Share' />
          <alias key='&quot;[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Sales:qk]&quot;' value='Total Sales' />
        </aliases>
      </column>
      <column caption='ProfitSegment' datatype='string' name='[Calculation_609956275442040832]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF ([Calculation_609956275442155522])&lt;0 THEN &apos;Bad Customer&apos; &#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=0 AND ([Calculation_609956275442155522])&lt;=10 &#13;&#10;THEN &apos;OK Customer&apos;&#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=10 AND ([Calculation_609956275442155522])&lt;=30 THEN&#13;&#10;&apos;Good Customer&apos;&#13;&#10;ELSE &apos;High Customer&apos;&#13;&#10;END' />
      </column>
      <column caption='ProfitMargin' datatype='real' name='[Calculation_609956275442155522]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])*100' />
      </column>
      <column caption='OrderPeriod' datatype='integer' name='[Calculation_609956275446317059]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([Order Date])-MIN([Order Date])' />
      </column>
      <column caption='Index' datatype='integer' name='[Calculation_781656010791469057]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:City:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_609956275442040832]' derivation='User' name='[usr:Calculation_609956275442040832:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_609956275446317059]' derivation='User' name='[usr:Calculation_609956275446317059:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_781656010791469057]' derivation='User' name='[usr:Calculation_781656010791469057:ok:10]' pivot='key' type='ordinal'>
        <table-calc ordering-type='Field'>
          <order field='[federated.02gtcc80zihlhl1295smv0bkkecw].[Customer Name]' />
          <sort direction='DESC' using='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275446317059:qk]' />
        </table-calc>
      </column-instance>
      <group caption='Action (Category,Customer Name,Product Name,Sub-Category)' hidden='true' name='[Action (Category,Customer Name,Product Name,Sub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[Customer Name]' />
          <groupfilter function='level-members' level='[Product Name]' />
          <groupfilter function='level-members' level='[Sub-Category]' />
        </groupfilter>
      </group>
      <group caption='Action (Customer Name)' hidden='true' name='[Action (Customer Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Customer Name]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Country,State)' hidden='true' name='[Tooltip (Country,State)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Customer Name)' hidden='true' name='[Tooltip (Customer Name)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Customer Name]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='100' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Calculation_781656010791469057:ok:10]' type='palette'>
            <map to='#499894'>
              <bucket>5</bucket>
            </map>
            <map to='#499894'>
              <bucket>25</bucket>
            </map>
            <map to='#499894'>
              <bucket>45</bucket>
            </map>
            <map to='#499894'>
              <bucket>65</bucket>
            </map>
            <map to='#499894'>
              <bucket>85</bucket>
            </map>
            <map to='#499894'>
              <bucket>105</bucket>
            </map>
            <map to='#499894'>
              <bucket>125</bucket>
            </map>
            <map to='#499894'>
              <bucket>145</bucket>
            </map>
            <map to='#499894'>
              <bucket>165</bucket>
            </map>
            <map to='#499894'>
              <bucket>185</bucket>
            </map>
            <map to='#499894'>
              <bucket>205</bucket>
            </map>
            <map to='#499894'>
              <bucket>225</bucket>
            </map>
            <map to='#499894'>
              <bucket>245</bucket>
            </map>
            <map to='#499894'>
              <bucket>265</bucket>
            </map>
            <map to='#499894'>
              <bucket>285</bucket>
            </map>
            <map to='#499894'>
              <bucket>305</bucket>
            </map>
            <map to='#499894'>
              <bucket>325</bucket>
            </map>
            <map to='#499894'>
              <bucket>345</bucket>
            </map>
            <map to='#499894'>
              <bucket>365</bucket>
            </map>
            <map to='#499894'>
              <bucket>385</bucket>
            </map>
            <map to='#499894'>
              <bucket>405</bucket>
            </map>
            <map to='#499894'>
              <bucket>425</bucket>
            </map>
            <map to='#499894'>
              <bucket>445</bucket>
            </map>
            <map to='#499894'>
              <bucket>465</bucket>
            </map>
            <map to='#499894'>
              <bucket>485</bucket>
            </map>
            <map to='#499894'>
              <bucket>505</bucket>
            </map>
            <map to='#499894'>
              <bucket>525</bucket>
            </map>
            <map to='#499894'>
              <bucket>545</bucket>
            </map>
            <map to='#499894'>
              <bucket>565</bucket>
            </map>
            <map to='#499894'>
              <bucket>585</bucket>
            </map>
            <map to='#499894'>
              <bucket>605</bucket>
            </map>
            <map to='#499894'>
              <bucket>625</bucket>
            </map>
            <map to='#499894'>
              <bucket>645</bucket>
            </map>
            <map to='#499894'>
              <bucket>665</bucket>
            </map>
            <map to='#499894'>
              <bucket>685</bucket>
            </map>
            <map to='#499894'>
              <bucket>705</bucket>
            </map>
            <map to='#499894'>
              <bucket>725</bucket>
            </map>
            <map to='#499894'>
              <bucket>745</bucket>
            </map>
            <map to='#499894'>
              <bucket>765</bucket>
            </map>
            <map to='#499894'>
              <bucket>785</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>13</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>33</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>53</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>73</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>93</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>113</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>133</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>153</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>173</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>193</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>213</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>233</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>253</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>273</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>293</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>313</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>333</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>353</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>373</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>393</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>413</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>433</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>453</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>473</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>493</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>513</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>533</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>553</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>573</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>593</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>613</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>633</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>653</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>673</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>693</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>713</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>733</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>753</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>773</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>793</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>9</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>29</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>49</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>69</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>89</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>109</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>129</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>149</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>169</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>189</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>209</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>229</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>249</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>269</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>289</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>309</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>329</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>349</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>369</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>389</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>409</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>429</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>449</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>469</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>489</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>509</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>529</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>549</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>569</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>589</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>609</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>629</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>649</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>669</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>689</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>709</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>729</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>749</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>769</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>789</bucket>
            </map>
            <map to='#79706e'>
              <bucket>1</bucket>
            </map>
            <map to='#79706e'>
              <bucket>21</bucket>
            </map>
            <map to='#79706e'>
              <bucket>41</bucket>
            </map>
            <map to='#79706e'>
              <bucket>61</bucket>
            </map>
            <map to='#79706e'>
              <bucket>81</bucket>
            </map>
            <map to='#79706e'>
              <bucket>101</bucket>
            </map>
            <map to='#79706e'>
              <bucket>121</bucket>
            </map>
            <map to='#79706e'>
              <bucket>141</bucket>
            </map>
            <map to='#79706e'>
              <bucket>161</bucket>
            </map>
            <map to='#79706e'>
              <bucket>181</bucket>
            </map>
            <map to='#79706e'>
              <bucket>201</bucket>
            </map>
            <map to='#79706e'>
              <bucket>221</bucket>
            </map>
            <map to='#79706e'>
              <bucket>241</bucket>
            </map>
            <map to='#79706e'>
              <bucket>261</bucket>
            </map>
            <map to='#79706e'>
              <bucket>281</bucket>
            </map>
            <map to='#79706e'>
              <bucket>301</bucket>
            </map>
            <map to='#79706e'>
              <bucket>321</bucket>
            </map>
            <map to='#79706e'>
              <bucket>341</bucket>
            </map>
            <map to='#79706e'>
              <bucket>361</bucket>
            </map>
            <map to='#79706e'>
              <bucket>381</bucket>
            </map>
            <map to='#79706e'>
              <bucket>401</bucket>
            </map>
            <map to='#79706e'>
              <bucket>421</bucket>
            </map>
            <map to='#79706e'>
              <bucket>441</bucket>
            </map>
            <map to='#79706e'>
              <bucket>461</bucket>
            </map>
            <map to='#79706e'>
              <bucket>481</bucket>
            </map>
            <map to='#79706e'>
              <bucket>501</bucket>
            </map>
            <map to='#79706e'>
              <bucket>521</bucket>
            </map>
            <map to='#79706e'>
              <bucket>541</bucket>
            </map>
            <map to='#79706e'>
              <bucket>561</bucket>
            </map>
            <map to='#79706e'>
              <bucket>581</bucket>
            </map>
            <map to='#79706e'>
              <bucket>601</bucket>
            </map>
            <map to='#79706e'>
              <bucket>621</bucket>
            </map>
            <map to='#79706e'>
              <bucket>641</bucket>
            </map>
            <map to='#79706e'>
              <bucket>661</bucket>
            </map>
            <map to='#79706e'>
              <bucket>681</bucket>
            </map>
            <map to='#79706e'>
              <bucket>701</bucket>
            </map>
            <map to='#79706e'>
              <bucket>721</bucket>
            </map>
            <map to='#79706e'>
              <bucket>741</bucket>
            </map>
            <map to='#79706e'>
              <bucket>761</bucket>
            </map>
            <map to='#79706e'>
              <bucket>781</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>4</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>24</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>44</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>64</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>84</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>104</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>124</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>144</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>164</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>184</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>204</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>224</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>244</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>264</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>284</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>304</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>324</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>344</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>364</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>384</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>404</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>424</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>444</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>464</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>484</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>504</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>524</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>544</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>564</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>584</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>604</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>624</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>644</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>664</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>684</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>704</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>724</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>744</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>764</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>784</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>8</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>28</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>48</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>68</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>88</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>108</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>128</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>148</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>168</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>188</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>208</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>228</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>248</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>268</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>288</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>308</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>328</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>348</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>368</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>388</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>408</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>428</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>448</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>468</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>488</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>508</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>528</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>548</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>568</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>588</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>608</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>628</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>648</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>668</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>688</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>708</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>728</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>748</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>768</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>788</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>15</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>35</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>55</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>75</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>95</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>115</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>135</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>155</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>175</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>195</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>215</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>235</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>255</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>275</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>295</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>315</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>335</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>355</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>375</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>395</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>415</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>435</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>455</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>475</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>495</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>515</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>535</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>555</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>575</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>595</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>615</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>635</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>655</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>675</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>695</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>715</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>735</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>755</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>775</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>12</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>32</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>52</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>72</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>92</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>112</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>132</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>152</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>172</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>192</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>212</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>232</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>252</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>272</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>292</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>312</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>332</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>352</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>372</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>392</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>412</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>432</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>452</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>472</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>492</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>512</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>532</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>552</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>572</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>592</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>612</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>632</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>652</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>672</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>692</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>712</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>732</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>752</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>772</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>792</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>17</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>37</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>57</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>77</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>97</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>117</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>137</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>157</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>177</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>197</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>217</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>237</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>257</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>277</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>297</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>317</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>337</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>357</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>377</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>397</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>417</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>437</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>457</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>477</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>497</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>517</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>537</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>557</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>577</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>597</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>617</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>637</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>657</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>677</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>697</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>717</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>737</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>757</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>777</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>7</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>27</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>47</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>67</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>87</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>107</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>127</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>147</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>167</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>187</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>207</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>227</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>247</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>267</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>287</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>307</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>327</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>347</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>367</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>387</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>407</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>427</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>447</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>467</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>487</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>507</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>527</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>547</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>567</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>587</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>607</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>627</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>647</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>667</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>687</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>707</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>727</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>747</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>767</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>787</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>20</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>40</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>60</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>80</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>100</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>120</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>140</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>160</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>180</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>200</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>220</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>240</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>260</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>280</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>300</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>320</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>340</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>360</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>380</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>400</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>420</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>440</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>460</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>480</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>500</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>520</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>540</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>560</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>580</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>600</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>620</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>640</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>660</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>680</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>700</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>720</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>740</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>760</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>780</bucket>
            </map>
            <map to='#d37295'>
              <bucket>19</bucket>
            </map>
            <map to='#d37295'>
              <bucket>39</bucket>
            </map>
            <map to='#d37295'>
              <bucket>59</bucket>
            </map>
            <map to='#d37295'>
              <bucket>79</bucket>
            </map>
            <map to='#d37295'>
              <bucket>99</bucket>
            </map>
            <map to='#d37295'>
              <bucket>119</bucket>
            </map>
            <map to='#d37295'>
              <bucket>139</bucket>
            </map>
            <map to='#d37295'>
              <bucket>159</bucket>
            </map>
            <map to='#d37295'>
              <bucket>179</bucket>
            </map>
            <map to='#d37295'>
              <bucket>199</bucket>
            </map>
            <map to='#d37295'>
              <bucket>219</bucket>
            </map>
            <map to='#d37295'>
              <bucket>239</bucket>
            </map>
            <map to='#d37295'>
              <bucket>259</bucket>
            </map>
            <map to='#d37295'>
              <bucket>279</bucket>
            </map>
            <map to='#d37295'>
              <bucket>299</bucket>
            </map>
            <map to='#d37295'>
              <bucket>319</bucket>
            </map>
            <map to='#d37295'>
              <bucket>339</bucket>
            </map>
            <map to='#d37295'>
              <bucket>359</bucket>
            </map>
            <map to='#d37295'>
              <bucket>379</bucket>
            </map>
            <map to='#d37295'>
              <bucket>399</bucket>
            </map>
            <map to='#d37295'>
              <bucket>419</bucket>
            </map>
            <map to='#d37295'>
              <bucket>439</bucket>
            </map>
            <map to='#d37295'>
              <bucket>459</bucket>
            </map>
            <map to='#d37295'>
              <bucket>479</bucket>
            </map>
            <map to='#d37295'>
              <bucket>499</bucket>
            </map>
            <map to='#d37295'>
              <bucket>519</bucket>
            </map>
            <map to='#d37295'>
              <bucket>539</bucket>
            </map>
            <map to='#d37295'>
              <bucket>559</bucket>
            </map>
            <map to='#d37295'>
              <bucket>579</bucket>
            </map>
            <map to='#d37295'>
              <bucket>599</bucket>
            </map>
            <map to='#d37295'>
              <bucket>619</bucket>
            </map>
            <map to='#d37295'>
              <bucket>639</bucket>
            </map>
            <map to='#d37295'>
              <bucket>659</bucket>
            </map>
            <map to='#d37295'>
              <bucket>679</bucket>
            </map>
            <map to='#d37295'>
              <bucket>699</bucket>
            </map>
            <map to='#d37295'>
              <bucket>719</bucket>
            </map>
            <map to='#d37295'>
              <bucket>739</bucket>
            </map>
            <map to='#d37295'>
              <bucket>759</bucket>
            </map>
            <map to='#d37295'>
              <bucket>779</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>16</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>36</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>56</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>76</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>96</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>116</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>136</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>156</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>176</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>196</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>216</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>236</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>256</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>276</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>296</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>316</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>336</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>356</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>376</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>396</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>416</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>436</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>456</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>476</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>496</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>516</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>536</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>556</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>576</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>596</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>616</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>636</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>656</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>676</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>696</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>716</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>736</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>756</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>776</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>14</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>34</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>54</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>74</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>94</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>114</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>134</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>154</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>174</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>194</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>214</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>234</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>254</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>274</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>294</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>314</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>334</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>354</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>374</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>394</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>414</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>434</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>454</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>474</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>494</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>514</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>534</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>554</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>574</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>594</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>614</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>634</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>654</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>674</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>694</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>714</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>734</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>754</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>774</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#e15759'>
              <bucket>23</bucket>
            </map>
            <map to='#e15759'>
              <bucket>43</bucket>
            </map>
            <map to='#e15759'>
              <bucket>63</bucket>
            </map>
            <map to='#e15759'>
              <bucket>83</bucket>
            </map>
            <map to='#e15759'>
              <bucket>103</bucket>
            </map>
            <map to='#e15759'>
              <bucket>123</bucket>
            </map>
            <map to='#e15759'>
              <bucket>143</bucket>
            </map>
            <map to='#e15759'>
              <bucket>163</bucket>
            </map>
            <map to='#e15759'>
              <bucket>183</bucket>
            </map>
            <map to='#e15759'>
              <bucket>203</bucket>
            </map>
            <map to='#e15759'>
              <bucket>223</bucket>
            </map>
            <map to='#e15759'>
              <bucket>243</bucket>
            </map>
            <map to='#e15759'>
              <bucket>263</bucket>
            </map>
            <map to='#e15759'>
              <bucket>283</bucket>
            </map>
            <map to='#e15759'>
              <bucket>303</bucket>
            </map>
            <map to='#e15759'>
              <bucket>323</bucket>
            </map>
            <map to='#e15759'>
              <bucket>343</bucket>
            </map>
            <map to='#e15759'>
              <bucket>363</bucket>
            </map>
            <map to='#e15759'>
              <bucket>383</bucket>
            </map>
            <map to='#e15759'>
              <bucket>403</bucket>
            </map>
            <map to='#e15759'>
              <bucket>423</bucket>
            </map>
            <map to='#e15759'>
              <bucket>443</bucket>
            </map>
            <map to='#e15759'>
              <bucket>463</bucket>
            </map>
            <map to='#e15759'>
              <bucket>483</bucket>
            </map>
            <map to='#e15759'>
              <bucket>503</bucket>
            </map>
            <map to='#e15759'>
              <bucket>523</bucket>
            </map>
            <map to='#e15759'>
              <bucket>543</bucket>
            </map>
            <map to='#e15759'>
              <bucket>563</bucket>
            </map>
            <map to='#e15759'>
              <bucket>583</bucket>
            </map>
            <map to='#e15759'>
              <bucket>603</bucket>
            </map>
            <map to='#e15759'>
              <bucket>623</bucket>
            </map>
            <map to='#e15759'>
              <bucket>643</bucket>
            </map>
            <map to='#e15759'>
              <bucket>663</bucket>
            </map>
            <map to='#e15759'>
              <bucket>683</bucket>
            </map>
            <map to='#e15759'>
              <bucket>703</bucket>
            </map>
            <map to='#e15759'>
              <bucket>723</bucket>
            </map>
            <map to='#e15759'>
              <bucket>743</bucket>
            </map>
            <map to='#e15759'>
              <bucket>763</bucket>
            </map>
            <map to='#e15759'>
              <bucket>783</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>6</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>26</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>46</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>66</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>86</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>106</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>126</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>146</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>166</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>186</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>206</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>226</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>246</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>266</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>286</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>306</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>326</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>346</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>366</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>386</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>406</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>426</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>446</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>466</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>486</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>506</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>526</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>546</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>566</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>586</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>606</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>626</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>646</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>666</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>686</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>706</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>726</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>746</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>766</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>786</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>11</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>31</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>51</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>71</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>91</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>111</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>131</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>151</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>171</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>191</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>211</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>231</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>251</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>271</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>291</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>311</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>331</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>351</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>371</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>391</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>411</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>431</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>451</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>471</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>491</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>511</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>531</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>551</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>571</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>591</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>611</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>631</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>651</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>671</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>691</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>711</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>731</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>751</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>771</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>791</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>18</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>38</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>58</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>78</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>118</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>138</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>158</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>178</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>198</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>218</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>238</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>258</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>278</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>298</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>318</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>338</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>358</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>378</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>398</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>418</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>438</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>458</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>478</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>498</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>518</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>538</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>558</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>578</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>598</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>618</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>638</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>658</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>678</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>698</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>718</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>738</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>758</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>778</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>2</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>22</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>42</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>62</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>82</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>102</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>122</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>142</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>162</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>182</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>202</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>222</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>242</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>262</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>282</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>302</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>322</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>342</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>362</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>382</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>402</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>422</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>442</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>462</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>482</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>502</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>522</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>542</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>562</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>582</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>602</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>622</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>642</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>662</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>682</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>702</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>722</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>742</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>762</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>782</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>10</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>30</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>50</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>70</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>90</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>110</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>130</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>150</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>170</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>190</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>210</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>230</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>250</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>270</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>290</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>310</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>330</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>350</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>370</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>390</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>410</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>430</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>450</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>470</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>490</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>510</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>530</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>550</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>570</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>590</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>610</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>630</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>650</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>670</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>690</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>710</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>730</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>750</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>770</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>790</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_609956275442040832:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;High Customer&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;OK Customer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bad Customer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Good Customer&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Pakistan&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[Orders].[Order ID]' />
                    <expression op='[Returns].[Order ID]' />
                  </expression>
                </clause>
                <relation join='inner' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='[Orders].[Region]' />
                      <expression op='[People].[Region]' />
                    </expression>
                  </clause>
                  <relation connection='excel-direct.0yw6se61x9d807101p99x1qozys0' name='Orders' table='[Orders$]' type='table'>
                    <columns gridOrigin='A1:U9996:no:A1:U9996:0' header='yes' outcome='6'>
                      <column datatype='integer' name='Row ID' ordinal='0' />
                      <column datatype='string' name='Order ID' ordinal='1' />
                      <column datatype='date' name='Order Date' ordinal='2' />
                      <column datatype='date' name='Ship Date' ordinal='3' />
                      <column datatype='string' name='Ship Mode' ordinal='4' />
                      <column datatype='string' name='Customer ID' ordinal='5' />
                      <column datatype='string' name='Customer Name' ordinal='6' />
                      <column datatype='string' name='Segment' ordinal='7' />
                      <column datatype='string' name='Country' ordinal='8' />
                      <column datatype='string' name='City' ordinal='9' />
                      <column datatype='string' name='State' ordinal='10' />
                      <column datatype='integer' name='Postal Code' ordinal='11' />
                      <column datatype='string' name='Region' ordinal='12' />
                      <column datatype='string' name='Product ID' ordinal='13' />
                      <column datatype='string' name='Category' ordinal='14' />
                      <column datatype='string' name='Sub-Category' ordinal='15' />
                      <column datatype='string' name='Product Name' ordinal='16' />
                      <column datatype='real' name='Sales' ordinal='17' />
                      <column datatype='integer' name='Quantity' ordinal='18' />
                      <column datatype='real' name='Discount' ordinal='19' />
                      <column datatype='real' name='Profit' ordinal='20' />
                    </columns>
                  </relation>
                  <relation connection='excel-direct.0yw6se61x9d807101p99x1qozys0' name='People' table='[People$]' type='table'>
                    <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
                      <column datatype='string' name='Person' ordinal='0' />
                      <column datatype='string' name='Region' ordinal='1' />
                    </columns>
                  </relation>
                </relation>
                <relation connection='excel-direct.0yw6se61x9d807101p99x1qozys0' name='Returns' table='[Returns$]' type='table'>
                  <columns gridOrigin='A1:B297:no:A1:B297:0' header='yes' outcome='6'>
                    <column datatype='string' name='Returned' ordinal='0' />
                    <column datatype='string' name='Order ID' ordinal='1' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.02gtcc80zihlhl1295smv0bkkecw'>
      <datasources>
        <datasource caption='Orders+ (Sample - Superstore)' name='federated.02gtcc80zihlhl1295smv0bkkecw' />
      </datasources>
      <datasource-dependencies datasource='federated.02gtcc80zihlhl1295smv0bkkecw'>
        <column caption='ProfitSegment' datatype='string' name='[Calculation_609956275442040832]' role='measure' type='nominal'>
          <calculation class='tableau' formula='IF ([Calculation_609956275442155522])&lt;0 THEN &apos;Bad Customer&apos; &#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=0 AND ([Calculation_609956275442155522])&lt;=10 &#13;&#10;THEN &apos;OK Customer&apos;&#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=10 AND ([Calculation_609956275442155522])&lt;=30 THEN&#13;&#10;&apos;Good Customer&apos;&#13;&#10;ELSE &apos;High Customer&apos;&#13;&#10;END' />
        </column>
        <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
        <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_609956275442040832]' derivation='User' name='[usr:Calculation_609956275442040832:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Segment:nk]'>
        <groupfilter function='level-members' level='[none:Segment:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442040832:nk]'>
        <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[usr:Calculation_609956275442040832:nk]' member='&quot;Bad Customer&quot;' />
          <groupfilter function='member' level='[usr:Calculation_609956275442040832:nk]' member='&quot;Good Customer&quot;' />
          <groupfilter function='member' level='[usr:Calculation_609956275442040832:nk]' member='&quot;High Customer&quot;' />
          <groupfilter function='member' level='[usr:Calculation_609956275442040832:nk]' member='&quot;OK Customer&quot;' />
        </groupfilter>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Customer Product Sales' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='CustomerProfitSegmentFIlter' name='[Action2]'>
      <source datasource='federated.02gtcc80zihlhl1295smv0bkkecw' type='datasource' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Customer Profit Segment' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' worksheet='Product Profit Analysis' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Customer Behaviour' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Top N Customer' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' worksheet='Month on Month Analysis' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' worksheet='Return Category Analysis' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' worksheet='Returns Geographic Analysis' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Bottom 3 Customers'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.02gtcc80zihlhl1295smv0bkkecw' />
          </datasources>
          <datasource-dependencies datasource='federated.02gtcc80zihlhl1295smv0bkkecw'>
            <column caption='ProfitSegment' datatype='string' name='[Calculation_609956275442040832]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ([Calculation_609956275442155522])&lt;0 THEN &apos;Bad Customer&apos; &#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=0 AND ([Calculation_609956275442155522])&lt;=10 &#13;&#10;THEN &apos;OK Customer&apos;&#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=10 AND ([Calculation_609956275442155522])&lt;=30 THEN&#13;&#10;&apos;Good Customer&apos;&#13;&#10;ELSE &apos;High Customer&apos;&#13;&#10;END' />
            </column>
            <column caption='ProfitMargin' datatype='real' name='[Calculation_609956275442155522]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])*100' />
            </column>
            <column caption='Index' datatype='integer' name='[Calculation_781656010791469057]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_609956275442040832]' derivation='User' name='[usr:Calculation_609956275442040832:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_609956275442155522]' derivation='User' name='[usr:Calculation_609956275442155522:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_781656010791469057]' derivation='User' name='[usr:Calculation_781656010791469057:qk:7]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Customer Name:nk]' />
                <sort direction='ASC' using='[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Sales:qk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.02gtcc80zihlhl1295smv0bkkecw].[Action (Category,Customer Name,Product Name,Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Customer Name]' />
              <groupfilter function='level-members' level='[Product Name]' />
              <groupfilter function='level-members' level='[Sub-Category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.02gtcc80zihlhl1295smv0bkkecw].[Action (Customer Name)]'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_781656010791469057:qk:7]' included-values='in-range'>
            <max>3</max>
          </filter>
          <slices>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_781656010791469057:qk:7]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[Action (Category,Customer Name,Product Name,Sub-Category)]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[Action (Customer Name)]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Segment:nk]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442040832:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_781656010791469057:qk:7]' value='BottomNCustomer&#10;'>
              <formatted-text>
                <run>BottomNCustomer&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442155522:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Customer Name:nk]</rows>
        <cols>[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{D8B6CE89-997B-4221-8507-97432B662D63}' />
    </worksheet>
    <worksheet name='Customer Behaviour'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.02gtcc80zihlhl1295smv0bkkecw' />
          </datasources>
          <datasource-dependencies datasource='federated.02gtcc80zihlhl1295smv0bkkecw'>
            <column caption='ProfitSegment' datatype='string' name='[Calculation_609956275442040832]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ([Calculation_609956275442155522])&lt;0 THEN &apos;Bad Customer&apos; &#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=0 AND ([Calculation_609956275442155522])&lt;=10 &#13;&#10;THEN &apos;OK Customer&apos;&#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=10 AND ([Calculation_609956275442155522])&lt;=30 THEN&#13;&#10;&apos;Good Customer&apos;&#13;&#10;ELSE &apos;High Customer&apos;&#13;&#10;END' />
            </column>
            <column caption='ProfitMargin' datatype='real' name='[Calculation_609956275442155522]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])*100' />
            </column>
            <column caption='OrderPeriod' datatype='integer' name='[Calculation_609956275446317059]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([Order Date])-MIN([Order Date])' />
            </column>
            <column caption='Index' datatype='integer' name='[Calculation_781656010791469057]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_609956275442040832]' derivation='User' name='[usr:Calculation_609956275442040832:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_609956275446317059]' derivation='User' name='[usr:Calculation_609956275446317059:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_781656010791469057]' derivation='User' name='[usr:Calculation_781656010791469057:ok:10]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Field'>
                <order field='[federated.02gtcc80zihlhl1295smv0bkkecw].[Customer Name]' />
                <sort direction='DESC' using='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275446317059:qk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.02gtcc80zihlhl1295smv0bkkecw].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275446317059:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Quantity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.02gtcc80zihlhl1295smv0bkkecw].[Action (Category,Customer Name,Product Name,Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Customer Name]' />
              <groupfilter function='level-members' level='[Product Name]' />
              <groupfilter function='level-members' level='[Sub-Category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.02gtcc80zihlhl1295smv0bkkecw].[Action (Customer Name)]'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_781656010791469057:ok:10]'>
            <groupfilter function='level-members' level='[usr:Calculation_781656010791469057:ok:10]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Customer Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275446317059:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[:Measure Names]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_781656010791469057:ok:10]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[Action (Customer Name)]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[Action (Category,Customer Name,Product Name,Sub-Category)]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Segment:nk]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442040832:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.02gtcc80zihlhl1295smv0bkkecw].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Customer Name:nk]</rows>
        <cols>[federated.02gtcc80zihlhl1295smv0bkkecw].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{46AF7020-0DE7-485B-BAA6-C072E8BEA290}' />
    </worksheet>
    <worksheet name='Customer Product Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.02gtcc80zihlhl1295smv0bkkecw' />
          </datasources>
          <datasource-dependencies datasource='federated.02gtcc80zihlhl1295smv0bkkecw'>
            <column caption='ProfitSegment' datatype='string' name='[Calculation_609956275442040832]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ([Calculation_609956275442155522])&lt;0 THEN &apos;Bad Customer&apos; &#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=0 AND ([Calculation_609956275442155522])&lt;=10 &#13;&#10;THEN &apos;OK Customer&apos;&#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=10 AND ([Calculation_609956275442155522])&lt;=30 THEN&#13;&#10;&apos;Good Customer&apos;&#13;&#10;ELSE &apos;High Customer&apos;&#13;&#10;END' />
            </column>
            <column caption='ProfitMargin' datatype='real' name='[Calculation_609956275442155522]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])*100' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_609956275442040832]' derivation='User' name='[usr:Calculation_609956275442040832:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.02gtcc80zihlhl1295smv0bkkecw].[Action (Customer Name)]'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Segment:nk]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[Action (Customer Name)]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442040832:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Category:nk]' value='64' />
            <format attr='width' field='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Sub-Category:nk]' value='72' />
            <format attr='width' field='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Product Name:nk]' value='68' />
            <format attr='width' field='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Customer Name:nk]' value='104' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.02gtcc80zihlhl1295smv0bkkecw].[none:Category:nk] / ([federated.02gtcc80zihlhl1295smv0bkkecw].[none:Sub-Category:nk] / ([federated.02gtcc80zihlhl1295smv0bkkecw].[none:Product Name:nk] / [federated.02gtcc80zihlhl1295smv0bkkecw].[none:Customer Name:nk])))</rows>
        <cols>[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{E0C6A889-E480-429F-ACD8-B854FFEFDB64}' />
    </worksheet>
    <worksheet name='Customer Profit Segment'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.02gtcc80zihlhl1295smv0bkkecw' />
          </datasources>
          <datasource-dependencies datasource='federated.02gtcc80zihlhl1295smv0bkkecw'>
            <column caption='ProfitSegment' datatype='string' name='[Calculation_609956275442040832]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ([Calculation_609956275442155522])&lt;0 THEN &apos;Bad Customer&apos; &#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=0 AND ([Calculation_609956275442155522])&lt;=10 &#13;&#10;THEN &apos;OK Customer&apos;&#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=10 AND ([Calculation_609956275442155522])&lt;=30 THEN&#13;&#10;&apos;Good Customer&apos;&#13;&#10;ELSE &apos;High Customer&apos;&#13;&#10;END' />
            </column>
            <column caption='ProfitMargin' datatype='real' name='[Calculation_609956275442155522]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])*100' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_609956275442040832]' derivation='User' name='[usr:Calculation_609956275442040832:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_609956275442155522]' derivation='User' name='[usr:Calculation_609956275442155522:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.02gtcc80zihlhl1295smv0bkkecw].[Action (Category,Customer Name,Product Name,Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Customer Name]' />
              <groupfilter function='level-members' level='[Product Name]' />
              <groupfilter function='level-members' level='[Sub-Category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.02gtcc80zihlhl1295smv0bkkecw].[Action (Customer Name)]'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442040832:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Good Customer&quot;</bucket>
              <bucket>&quot;High Customer&quot;</bucket>
              <bucket>&quot;Bad Customer&quot;</bucket>
              <bucket>&quot;OK Customer&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[Action (Category,Customer Name,Product Name,Sub-Category)]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[Action (Customer Name)]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Segment:nk]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442040832:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442040832:nk]' />
              <size column='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442155522:qk]' />
              <lod column='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Customer Name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Customer Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Customer Name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Profit:&#9;</run>
                <run bold='true'><![CDATA[<[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Profit:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Sales:&#9;</run>
                <run bold='true'><![CDATA[<[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Sales:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>ProfitSegment:&#9;</run>
                <run bold='true'><![CDATA[<[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442040832:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>ProfitMargin:&#9;</run>
                <run bold='true'><![CDATA[<[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442155522:qk]>]]></run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Profit:qk]</rows>
        <cols>[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{724FC5F0-6575-4B49-8391-33A06F22CD63}' />
    </worksheet>
    <worksheet name='Map--Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.02gtcc80zihlhl1295smv0bkkecw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.02gtcc80zihlhl1295smv0bkkecw'>
            <column caption='ProfitSegment' datatype='string' name='[Calculation_609956275442040832]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ([Calculation_609956275442155522])&lt;0 THEN &apos;Bad Customer&apos; &#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=0 AND ([Calculation_609956275442155522])&lt;=10 &#13;&#10;THEN &apos;OK Customer&apos;&#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=10 AND ([Calculation_609956275442155522])&lt;=30 THEN&#13;&#10;&apos;Good Customer&apos;&#13;&#10;ELSE &apos;High Customer&apos;&#13;&#10;END' />
            </column>
            <column caption='ProfitMargin' datatype='real' name='[Calculation_609956275442155522]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])*100' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Customer ID]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Order ID]' derivation='Count' name='[cnt:Order ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Customer ID]' derivation='CountD' name='[ctd:Customer ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_609956275442040832]' derivation='User' name='[usr:Calculation_609956275442040832:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Order Date:qk]' included-values='in-range'>
            <min>#2015-10-02#</min>
            <max>#2017-12-30#</max>
          </filter>
          <slices>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Order Date:qk]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Segment:nk]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442040832:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.02gtcc80zihlhl1295smv0bkkecw].[Longitude (generated)]' field-type='quantitative' max='-6586835.270819338' min='-16548268.948699903' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.02gtcc80zihlhl1295smv0bkkecw].[Latitude (generated)]' field-type='quantitative' max='6985471.4251610031' min='2768144.3369232528' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Sales:qk]' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Sales:qk]' />
              <size column='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:State:nk]' />
              <text column='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:State:nk]' />
              <tooltip column='[federated.02gtcc80zihlhl1295smv0bkkecw].[cnt:Order ID:qk]' />
              <tooltip column='[federated.02gtcc80zihlhl1295smv0bkkecw].[ctd:Customer ID:qk]' />
              <geometry column='[federated.02gtcc80zihlhl1295smv0bkkecw].[Geometry (generated)]' />
              <lod column='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Country:nk]' />
              <lod column='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:State:nk]' />
              <lod column='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442040832:nk]' />
              <lod column='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442040832:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Country:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>State:&#9;</run>
                <run bold='true'><![CDATA[<[federated.02gtcc80zihlhl1295smv0bkkecw].[none:State:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count of Order ID:&#9;</run>
                <run bold='true'><![CDATA[<[federated.02gtcc80zihlhl1295smv0bkkecw].[cnt:Order ID:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Distinct count of Customer ID:&#9;</run>
                <run bold='true'><![CDATA[<[federated.02gtcc80zihlhl1295smv0bkkecw].[ctd:Customer ID:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Profit:&#9;</run>
                <run bold='true'><![CDATA[<[federated.02gtcc80zihlhl1295smv0bkkecw].[none:State:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sales:&#9;</run>
                <run bold='true'><![CDATA[<[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Sales:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>&lt;</run>
                <run fontcolor='#787878'><![CDATA[Sheet name="Top City Sales" maxwidth="450" maxheight="150" filter="<All Fields>"]]></run>
                <run fontcolor='#787878'>&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>&lt;</run>
                <run fontcolor='#787878'><![CDATA[Sheet name="Top SubCategory" maxwidth="300" maxheight="300" filter="<All Fields>"]]></run>
                <run fontcolor='#787878'>&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>&lt;</run>
                <run fontcolor='#787878'><![CDATA[Sheet name="Top Customers" maxwidth="300" maxheight="300" filter="<All Fields>"]]></run>
                <run fontcolor='#787878'>&gt;</run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.02gtcc80zihlhl1295smv0bkkecw].[Latitude (generated)]</rows>
        <cols>[federated.02gtcc80zihlhl1295smv0bkkecw].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{24EE8689-D5F4-4B85-A459-8B9BA55B51AF}' />
    </worksheet>
    <worksheet name='Month on Month Analysis'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.02gtcc80zihlhl1295smv0bkkecw' />
          </datasources>
          <datasource-dependencies datasource='federated.02gtcc80zihlhl1295smv0bkkecw'>
            <column caption='ProfitSegment' datatype='string' name='[Calculation_609956275442040832]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ([Calculation_609956275442155522])&lt;0 THEN &apos;Bad Customer&apos; &#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=0 AND ([Calculation_609956275442155522])&lt;=10 &#13;&#10;THEN &apos;OK Customer&apos;&#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=10 AND ([Calculation_609956275442155522])&lt;=30 THEN&#13;&#10;&apos;Good Customer&apos;&#13;&#10;ELSE &apos;High Customer&apos;&#13;&#10;END' />
            </column>
            <column caption='ProfitMargin' datatype='real' name='[Calculation_609956275442155522]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])*100' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcdf:sum:Sales:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Field' type='PctDiff'>
                <order field='[federated.02gtcc80zihlhl1295smv0bkkecw].[yr:Order Date:ok]' />
                <order field='[federated.02gtcc80zihlhl1295smv0bkkecw].[mn:Order Date:ok]' />
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_609956275442040832]' derivation='User' name='[usr:Calculation_609956275442040832:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Segment:nk]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442040832:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Sales:qk]' field-type='quantitative' reverse='true' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.02gtcc80zihlhl1295smv0bkkecw].[pcdf:sum:Sales:qk:1]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>([federated.02gtcc80zihlhl1295smv0bkkecw].[yr:Order Date:ok] / [federated.02gtcc80zihlhl1295smv0bkkecw].[mn:Order Date:ok])</rows>
        <cols>([federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Sales:qk] + [federated.02gtcc80zihlhl1295smv0bkkecw].[pcdf:sum:Sales:qk:1])</cols>
      </table>
      <simple-id uuid='{DC748858-813E-4B69-BB5F-7BCDCA4F26F2}' />
    </worksheet>
    <worksheet name='Product Profit Analysis'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.02gtcc80zihlhl1295smv0bkkecw' />
          </datasources>
          <datasource-dependencies datasource='federated.02gtcc80zihlhl1295smv0bkkecw'>
            <column caption='ProfitSegment' datatype='string' name='[Calculation_609956275442040832]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ([Calculation_609956275442155522])&lt;0 THEN &apos;Bad Customer&apos; &#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=0 AND ([Calculation_609956275442155522])&lt;=10 &#13;&#10;THEN &apos;OK Customer&apos;&#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=10 AND ([Calculation_609956275442155522])&lt;=30 THEN&#13;&#10;&apos;Good Customer&apos;&#13;&#10;ELSE &apos;High Customer&apos;&#13;&#10;END' />
            </column>
            <column caption='ProfitMargin' datatype='real' name='[Calculation_609956275442155522]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])*100' />
            </column>
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_609956275442040832]' derivation='User' name='[usr:Calculation_609956275442040832:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Segment:nk]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442040832:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Profit:qk]' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff0000</color>
                <color>#fb1616</color>
                <color>#f82d2d</color>
                <color>#f44242</color>
                <color>#f15757</color>
                <color>#ed6c6c</color>
                <color>#ea7f7f</color>
                <color>#e69292</color>
                <color>#e3a5a5</color>
                <color>#dfb7b7</color>
                <color>#dcc8c8</color>
                <color>#d9d9d9</color>
                <color>#9dcbe4</color>
                <color>#8ec2df</color>
                <color>#80b6d9</color>
                <color>#73a8d0</color>
                <color>#669bc7</color>
                <color>#5c91bf</color>
                <color>#5385b2</color>
                <color>#487aa9</color>
                <color>#3b6ea0</color>
                <color>#306495</color>
                <color>#2b5c8a</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Profit:qk]' />
              <text column='[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Quantity:qk]' />
              <tooltip column='[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Product Name:nk]</rows>
        <cols>[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{C6CFDEC8-24B4-40B5-AF20-D07E90E2A097}' />
    </worksheet>
    <worksheet name='Quantity Analysis'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.02gtcc80zihlhl1295smv0bkkecw' />
          </datasources>
          <datasource-dependencies datasource='federated.02gtcc80zihlhl1295smv0bkkecw'>
            <column caption='ProfitSegment' datatype='string' name='[Calculation_609956275442040832]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ([Calculation_609956275442155522])&lt;0 THEN &apos;Bad Customer&apos; &#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=0 AND ([Calculation_609956275442155522])&lt;=10 &#13;&#10;THEN &apos;OK Customer&apos;&#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=10 AND ([Calculation_609956275442155522])&lt;=30 THEN&#13;&#10;&apos;Good Customer&apos;&#13;&#10;ELSE &apos;High Customer&apos;&#13;&#10;END' />
            </column>
            <column caption='ProfitMargin' datatype='real' name='[Calculation_609956275442155522]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])*100' />
            </column>
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Order ID]' derivation='Count' name='[cnt:Order ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order ID]' derivation='None' name='[none:Order ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='None' name='[none:Quantity:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_609956275442040832]' derivation='User' name='[usr:Calculation_609956275442040832:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Order ID:nk]'>
            <groupfilter function='level-members' level='[none:Order ID:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Order ID:nk]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Segment:nk]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442040832:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Segment:nk]' />
              <text column='[federated.02gtcc80zihlhl1295smv0bkkecw].[cnt:Order ID:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.02gtcc80zihlhl1295smv0bkkecw].[cnt:Order ID:qk]</rows>
        <cols>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Quantity:ok]</cols>
      </table>
      <simple-id uuid='{D223E486-04EF-46E9-AE37-A9F91A19FCB3}' />
    </worksheet>
    <worksheet name='Return Category Analysis'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.02gtcc80zihlhl1295smv0bkkecw' />
          </datasources>
          <datasource-dependencies datasource='federated.02gtcc80zihlhl1295smv0bkkecw'>
            <column caption='ProfitSegment' datatype='string' name='[Calculation_609956275442040832]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ([Calculation_609956275442155522])&lt;0 THEN &apos;Bad Customer&apos; &#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=0 AND ([Calculation_609956275442155522])&lt;=10 &#13;&#10;THEN &apos;OK Customer&apos;&#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=10 AND ([Calculation_609956275442155522])&lt;=30 THEN&#13;&#10;&apos;Good Customer&apos;&#13;&#10;ELSE &apos;High Customer&apos;&#13;&#10;END' />
            </column>
            <column caption='ProfitMargin' datatype='real' name='[Calculation_609956275442155522]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])*100' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Order ID]' derivation='Count' name='[cnt:Order ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Returned]' derivation='Count' name='[cnt:Returned:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_609956275442040832]' derivation='User' name='[usr:Calculation_609956275442040832:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Segment:nk]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442040832:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.02gtcc80zihlhl1295smv0bkkecw].[cnt:Order ID:qk]' field-type='quantitative' reverse='true' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='236' />
                <format attr='maxwidth' value='236' />
                <format attr='minheight' value='60' />
                <format attr='maxheight' value='60' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.02gtcc80zihlhl1295smv0bkkecw].[cnt:Returned:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Category:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.02gtcc80zihlhl1295smv0bkkecw].[cnt:Order ID:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Category:nk]</rows>
        <cols>([federated.02gtcc80zihlhl1295smv0bkkecw].[cnt:Order ID:qk] + [federated.02gtcc80zihlhl1295smv0bkkecw].[cnt:Returned:qk])</cols>
      </table>
      <simple-id uuid='{5BA90EF2-C060-4C00-97AE-E5EAA4C50BE0}' />
    </worksheet>
    <worksheet name='Returns Geographic Analysis'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.02gtcc80zihlhl1295smv0bkkecw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.02gtcc80zihlhl1295smv0bkkecw'>
            <column caption='ProfitSegment' datatype='string' name='[Calculation_609956275442040832]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ([Calculation_609956275442155522])&lt;0 THEN &apos;Bad Customer&apos; &#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=0 AND ([Calculation_609956275442155522])&lt;=10 &#13;&#10;THEN &apos;OK Customer&apos;&#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=10 AND ([Calculation_609956275442155522])&lt;=30 THEN&#13;&#10;&apos;Good Customer&apos;&#13;&#10;ELSE &apos;High Customer&apos;&#13;&#10;END' />
            </column>
            <column caption='ProfitMargin' datatype='real' name='[Calculation_609956275442155522]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])*100' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Returned]' derivation='Count' name='[cnt:Returned:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_609956275442040832]' derivation='User' name='[usr:Calculation_609956275442040832:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Segment:nk]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442040832:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.02gtcc80zihlhl1295smv0bkkecw].[Longitude (generated)]' field-type='quantitative' max='-3309875.5082222354' min='-19040960.120543331' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.02gtcc80zihlhl1295smv0bkkecw].[Latitude (generated)]' field-type='quantitative' max='10863103.61496935' min='1785239.788908025' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.02gtcc80zihlhl1295smv0bkkecw].[cnt:Returned:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2dada</color>
                <color>#f3c3c3</color>
                <color>#f5abab</color>
                <color>#f69393</color>
                <color>#f87c7c</color>
                <color>#f96363</color>
                <color>#fa4b4b</color>
                <color>#fc3232</color>
                <color>#fd1919</color>
                <color>#ff0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Country:nk]' />
              <lod column='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:State:nk]' />
              <color column='[federated.02gtcc80zihlhl1295smv0bkkecw].[cnt:Returned:qk]' />
              <geometry column='[federated.02gtcc80zihlhl1295smv0bkkecw].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.02gtcc80zihlhl1295smv0bkkecw].[Latitude (generated)]</rows>
        <cols>[federated.02gtcc80zihlhl1295smv0bkkecw].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{91401415-5B8C-48CF-BFF3-EED8869B4103}' />
    </worksheet>
    <worksheet name='Salesperson Analysis'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.02gtcc80zihlhl1295smv0bkkecw' />
          </datasources>
          <datasource-dependencies datasource='federated.02gtcc80zihlhl1295smv0bkkecw'>
            <column caption='ProfitSegment' datatype='string' name='[Calculation_609956275442040832]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ([Calculation_609956275442155522])&lt;0 THEN &apos;Bad Customer&apos; &#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=0 AND ([Calculation_609956275442155522])&lt;=10 &#13;&#10;THEN &apos;OK Customer&apos;&#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=10 AND ([Calculation_609956275442155522])&lt;=30 THEN&#13;&#10;&apos;Good Customer&apos;&#13;&#10;ELSE &apos;High Customer&apos;&#13;&#10;END' />
            </column>
            <column caption='ProfitMargin' datatype='real' name='[Calculation_609956275442155522]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])*100' />
            </column>
            <column datatype='string' name='[Person]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Person]' derivation='None' name='[none:Person:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Person:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_609956275442040832]' derivation='User' name='[usr:Calculation_609956275442040832:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Segment:nk]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442040832:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.02gtcc80zihlhl1295smv0bkkecw].[pcto:sum:Sales:qk:1]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Person:nk]</rows>
        <cols>[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{5D6BC5EC-505B-44D5-9EDE-C4CC6B5AE45F}' />
    </worksheet>
    <worksheet name='Top City Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.02gtcc80zihlhl1295smv0bkkecw' />
          </datasources>
          <datasource-dependencies datasource='federated.02gtcc80zihlhl1295smv0bkkecw'>
            <column caption='ProfitSegment' datatype='string' name='[Calculation_609956275442040832]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ([Calculation_609956275442155522])&lt;0 THEN &apos;Bad Customer&apos; &#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=0 AND ([Calculation_609956275442155522])&lt;=10 &#13;&#10;THEN &apos;OK Customer&apos;&#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=10 AND ([Calculation_609956275442155522])&lt;=30 THEN&#13;&#10;&apos;Good Customer&apos;&#13;&#10;ELSE &apos;High Customer&apos;&#13;&#10;END' />
            </column>
            <column caption='ProfitMargin' datatype='real' name='[Calculation_609956275442155522]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])*100' />
            </column>
            <column caption='Index' datatype='integer' name='[Calculation_781656010791469057]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:City:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_609956275442040832]' derivation='User' name='[usr:Calculation_609956275442040832:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_781656010791469057]' derivation='User' name='[usr:Calculation_781656010791469057:qk:10]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[federated.02gtcc80zihlhl1295smv0bkkecw].[City]' />
                <sort direction='DESC' using='[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Sales:qk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.02gtcc80zihlhl1295smv0bkkecw].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.02gtcc80zihlhl1295smv0bkkecw].[pcto:sum:Sales:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.02gtcc80zihlhl1295smv0bkkecw].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[federated.02gtcc80zihlhl1295smv0bkkecw].[pcto:sum:Sales:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.02gtcc80zihlhl1295smv0bkkecw].[Tooltip (Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - TopCitySales]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_781656010791469057:qk:10]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <slices>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_781656010791469057:qk:10]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[Tooltip (Country,State)]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[:Measure Names]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Segment:nk]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442040832:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.02gtcc80zihlhl1295smv0bkkecw].[:Measure Names]' value='192' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.02gtcc80zihlhl1295smv0bkkecw].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:City:nk]</rows>
        <cols>[federated.02gtcc80zihlhl1295smv0bkkecw].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{1C8A1C15-9412-469F-AD47-457961F3F44E}' />
    </worksheet>
    <worksheet name='Top Customers'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.02gtcc80zihlhl1295smv0bkkecw' />
          </datasources>
          <datasource-dependencies datasource='federated.02gtcc80zihlhl1295smv0bkkecw'>
            <column caption='ProfitSegment' datatype='string' name='[Calculation_609956275442040832]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ([Calculation_609956275442155522])&lt;0 THEN &apos;Bad Customer&apos; &#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=0 AND ([Calculation_609956275442155522])&lt;=10 &#13;&#10;THEN &apos;OK Customer&apos;&#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=10 AND ([Calculation_609956275442155522])&lt;=30 THEN&#13;&#10;&apos;Good Customer&apos;&#13;&#10;ELSE &apos;High Customer&apos;&#13;&#10;END' />
            </column>
            <column caption='ProfitMargin' datatype='real' name='[Calculation_609956275442155522]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])*100' />
            </column>
            <column caption='Index' datatype='integer' name='[Calculation_781656010791469057]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_609956275442040832]' derivation='User' name='[usr:Calculation_609956275442040832:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_781656010791469057]' derivation='User' name='[usr:Calculation_781656010791469057:qk:9]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Customer Name:nk]' />
                <sort direction='DESC' using='[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Sales:qk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.02gtcc80zihlhl1295smv0bkkecw].[Tooltip (Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Sheet 4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_781656010791469057:qk:9]' included-values='in-range'>
            <min>1</min>
            <max>5</max>
          </filter>
          <slices>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_781656010791469057:qk:9]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[Tooltip (Country,State)]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Segment:nk]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442040832:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='112' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Customer Name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{786335DE-6204-4AD7-8110-2266843B6224}' />
    </worksheet>
    <worksheet name='Top N Customer'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.02gtcc80zihlhl1295smv0bkkecw' />
          </datasources>
          <datasource-dependencies datasource='federated.02gtcc80zihlhl1295smv0bkkecw'>
            <column caption='ProfitSegment' datatype='string' name='[Calculation_609956275442040832]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ([Calculation_609956275442155522])&lt;0 THEN &apos;Bad Customer&apos; &#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=0 AND ([Calculation_609956275442155522])&lt;=10 &#13;&#10;THEN &apos;OK Customer&apos;&#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=10 AND ([Calculation_609956275442155522])&lt;=30 THEN&#13;&#10;&apos;Good Customer&apos;&#13;&#10;ELSE &apos;High Customer&apos;&#13;&#10;END' />
            </column>
            <column caption='ProfitMargin' datatype='real' name='[Calculation_609956275442155522]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])*100' />
            </column>
            <column caption='Index' datatype='integer' name='[Calculation_781656010791469057]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_609956275442040832]' derivation='User' name='[usr:Calculation_609956275442040832:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_609956275442155522]' derivation='User' name='[usr:Calculation_609956275442155522:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_781656010791469057]' derivation='User' name='[usr:Calculation_781656010791469057:qk:9]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Customer Name:nk]' />
                <sort direction='DESC' using='[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Sales:qk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.02gtcc80zihlhl1295smv0bkkecw].[Action (Category,Customer Name,Product Name,Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Customer Name]' />
              <groupfilter function='level-members' level='[Product Name]' />
              <groupfilter function='level-members' level='[Sub-Category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.02gtcc80zihlhl1295smv0bkkecw].[Action (Customer Name)]'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_781656010791469057:qk:9]' included-values='in-range'>
            <max>2</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Customer Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_781656010791469057:qk:9]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[Action (Category,Customer Name,Product Name,Sub-Category)]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[Action (Customer Name)]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Segment:nk]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442040832:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='21' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_781656010791469057:qk:9]' value='TopNCustomer'>
              <formatted-text>
                <run>TopNCustomer</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442155522:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Customer Name:nk]</rows>
        <cols>[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{697D56E5-A9F3-48E3-B516-096FF66944F8}' />
    </worksheet>
    <worksheet name='Top SubCategory'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.02gtcc80zihlhl1295smv0bkkecw' />
          </datasources>
          <datasource-dependencies datasource='federated.02gtcc80zihlhl1295smv0bkkecw'>
            <column caption='ProfitSegment' datatype='string' name='[Calculation_609956275442040832]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ([Calculation_609956275442155522])&lt;0 THEN &apos;Bad Customer&apos; &#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=0 AND ([Calculation_609956275442155522])&lt;=10 &#13;&#10;THEN &apos;OK Customer&apos;&#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=10 AND ([Calculation_609956275442155522])&lt;=30 THEN&#13;&#10;&apos;Good Customer&apos;&#13;&#10;ELSE &apos;High Customer&apos;&#13;&#10;END' />
            </column>
            <column caption='ProfitMargin' datatype='real' name='[Calculation_609956275442155522]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])*100' />
            </column>
            <column caption='Index' datatype='integer' name='[Calculation_781656010791469057]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_609956275442040832]' derivation='User' name='[usr:Calculation_609956275442040832:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_781656010791469057]' derivation='User' name='[usr:Calculation_781656010791469057:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Sub-Category:nk]' />
                <sort direction='DESC' using='[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Quantity:qk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.02gtcc80zihlhl1295smv0bkkecw].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Quantity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.02gtcc80zihlhl1295smv0bkkecw].[Tooltip (Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Sheet 3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_781656010791469057:qk:5]' included-values='in-range'>
            <min>1</min>
            <max>3</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Quantity:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[:Measure Names]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_781656010791469057:qk:5]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[Tooltip (Country,State)]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Segment:nk]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442040832:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.02gtcc80zihlhl1295smv0bkkecw].[:Measure Names]' value='242' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.02gtcc80zihlhl1295smv0bkkecw].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Sub-Category:nk]</rows>
        <cols>[federated.02gtcc80zihlhl1295smv0bkkecw].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{D554E131-F71D-4420-812F-FD76B4557170}' />
    </worksheet>
    <worksheet name='Total Orders'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='2'>Total Orders</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.02gtcc80zihlhl1295smv0bkkecw' />
          </datasources>
          <datasource-dependencies datasource='federated.02gtcc80zihlhl1295smv0bkkecw'>
            <column caption='ProfitSegment' datatype='string' name='[Calculation_609956275442040832]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ([Calculation_609956275442155522])&lt;0 THEN &apos;Bad Customer&apos; &#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=0 AND ([Calculation_609956275442155522])&lt;=10 &#13;&#10;THEN &apos;OK Customer&apos;&#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=10 AND ([Calculation_609956275442155522])&lt;=30 THEN&#13;&#10;&apos;Good Customer&apos;&#13;&#10;ELSE &apos;High Customer&apos;&#13;&#10;END' />
            </column>
            <column caption='ProfitMargin' datatype='real' name='[Calculation_609956275442155522]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])*100' />
            </column>
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Order ID]' derivation='Count' name='[cnt:Order ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_609956275442040832]' derivation='User' name='[usr:Calculation_609956275442040832:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Segment:nk]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442040832:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#d4d4d4' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.02gtcc80zihlhl1295smv0bkkecw].[cnt:Order ID:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{826145EC-960C-4C1B-932B-0E75C8865F98}' />
    </worksheet>
    <worksheet name='Total Profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='2'>Total Profit</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.02gtcc80zihlhl1295smv0bkkecw' />
          </datasources>
          <datasource-dependencies datasource='federated.02gtcc80zihlhl1295smv0bkkecw'>
            <column caption='ProfitSegment' datatype='string' name='[Calculation_609956275442040832]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ([Calculation_609956275442155522])&lt;0 THEN &apos;Bad Customer&apos; &#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=0 AND ([Calculation_609956275442155522])&lt;=10 &#13;&#10;THEN &apos;OK Customer&apos;&#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=10 AND ([Calculation_609956275442155522])&lt;=30 THEN&#13;&#10;&apos;Good Customer&apos;&#13;&#10;ELSE &apos;High Customer&apos;&#13;&#10;END' />
            </column>
            <column caption='ProfitMargin' datatype='real' name='[Calculation_609956275442155522]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])*100' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_609956275442040832]' derivation='User' name='[usr:Calculation_609956275442040832:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Segment:nk]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442040832:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#d4d4d4' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E088DEF4-0544-4F5C-92A5-B304F2511F5E}' />
    </worksheet>
    <worksheet name='Total Sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='2'>Total Sales</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.02gtcc80zihlhl1295smv0bkkecw' />
          </datasources>
          <datasource-dependencies datasource='federated.02gtcc80zihlhl1295smv0bkkecw'>
            <column caption='ProfitSegment' datatype='string' name='[Calculation_609956275442040832]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ([Calculation_609956275442155522])&lt;0 THEN &apos;Bad Customer&apos; &#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=0 AND ([Calculation_609956275442155522])&lt;=10 &#13;&#10;THEN &apos;OK Customer&apos;&#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=10 AND ([Calculation_609956275442155522])&lt;=30 THEN&#13;&#10;&apos;Good Customer&apos;&#13;&#10;ELSE &apos;High Customer&apos;&#13;&#10;END' />
            </column>
            <column caption='ProfitMargin' datatype='real' name='[Calculation_609956275442155522]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])*100' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_609956275442040832]' derivation='User' name='[usr:Calculation_609956275442040832:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Segment:nk]</column>
            <column>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442040832:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#1b1b1b' />
            <format attr='background-color' data-class='total' value='#ffffff' />
            <format attr='band-color' scope='cols' value='#1b1b1b' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#1b1b1b' />
            <format attr='background-color' data-class='total' value='#ffffff' />
            <format attr='band-color' scope='cols' value='#1b1b1b' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#d4d4d4' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='band-size' scope='rows' value='5' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Sales:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run fontcolor='#787878'>Sales:&#9;</run>
                <run bold='true'><![CDATA[<[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Sales:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <tooltip-style tooltip-mode='none' />
      </table>
      <simple-id uuid='{C48EB822-82F8-4431-B3A5-165C4D8E7C3B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Orders+ (Sample - Superstore)' name='federated.02gtcc80zihlhl1295smv0bkkecw' />
      </datasources>
      <datasource-dependencies datasource='federated.02gtcc80zihlhl1295smv0bkkecw'>
        <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
        <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='8500' id='3' name='Total Sales' w='11100' x='9000' y='4000' />
        <zone h='8500' id='4' name='Total Profit' w='11700' x='20100' y='4000' />
        <zone h='8500' id='5' name='Total Orders' w='13200' x='31700' y='4000' />
        <zone h='55250' id='6' name='Map--Sales' w='95200' x='5000' y='16750' />
        <zone h='8125' id='12' name='Map--Sales' pane-specification-id='0' param='[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Sales:qk]' type-v2='color' w='14000' x='86000' y='3625' />
        <zone h='6375' id='11' name='Map--Sales' param='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Order Date:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='38200' x='45700' y='6125' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='28' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='27' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='68' h='8500' id='3' is-fixed='true' name='Total Sales' w='11100' x='9000' y='4000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='68' h='8500' id='4' is-fixed='true' name='Total Profit' w='11700' x='20100' y='4000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='68' h='8500' id='5' is-fixed='true' name='Total Orders' w='13200' x='31700' y='4000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6375' id='11' name='Map--Sales' param='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Order Date:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='38200' x='45700' y='6125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='55250' id='6' is-fixed='true' name='Map--Sales' w='95200' x='5000' y='16750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='12' name='Map--Sales' pane-specification-id='0' param='[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Sales:qk]' type-v2='color' w='14000' x='86000' y='3625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{84EEAFD3-C07B-4751-9B5E-BC6AC9A4C81A}' />
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Orders+ (Sample - Superstore)' name='federated.02gtcc80zihlhl1295smv0bkkecw' />
      </datasources>
      <datasource-dependencies datasource='federated.02gtcc80zihlhl1295smv0bkkecw'>
        <column caption='ProfitSegment' datatype='string' name='[Calculation_609956275442040832]' role='measure' type='nominal'>
          <calculation class='tableau' formula='IF ([Calculation_609956275442155522])&lt;0 THEN &apos;Bad Customer&apos; &#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=0 AND ([Calculation_609956275442155522])&lt;=10 &#13;&#10;THEN &apos;OK Customer&apos;&#13;&#10;ELSEIF ([Calculation_609956275442155522])&gt;=10 AND ([Calculation_609956275442155522])&lt;=30 THEN&#13;&#10;&apos;Good Customer&apos;&#13;&#10;ELSE &apos;High Customer&apos;&#13;&#10;END' />
        </column>
        <column caption='Index' datatype='integer' name='[Calculation_781656010791469057]' role='measure' type='ordinal'>
          <calculation class='tableau' formula='INDEX()'>
            <table-calc ordering-type='Rows' />
          </calculation>
        </column>
        <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
        <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
        <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
        <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
        <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
        <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Calculation_609956275442040832]' derivation='User' name='[usr:Calculation_609956275442040832:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_781656010791469057]' derivation='User' name='[usr:Calculation_781656010791469057:qk:7]' pivot='key' type='quantitative'>
          <table-calc ordering-type='Field'>
            <order field='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Customer Name:nk]' />
            <sort direction='ASC' using='[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Sales:qk]' />
          </table-calc>
        </column-instance>
        <column-instance column='[Calculation_781656010791469057]' derivation='User' name='[usr:Calculation_781656010791469057:qk:9]' pivot='key' type='quantitative'>
          <table-calc ordering-type='Field'>
            <order field='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Customer Name:nk]' />
            <sort direction='DESC' using='[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Sales:qk]' />
          </table-calc>
        </column-instance>
      </datasource-dependencies>
      <zones>
        <zone h='24250' id='10' name='Customer Product Sales' w='46200' x='2100' y='48625' />
        <zone h='13500' id='12' name='Customer Product Sales' param='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Segment:nk]' type-v2='filter' w='10600' x='77500' y='3625' />
        <zone h='15500' id='13' name='Customer Behaviour' w='39300' x='49900' y='18750' />
        <zone h='25000' id='14' name='Top N Customer' w='46900' x='2000' y='24500' />
        <zone h='8500' id='19' name='Top N Customer' param='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_781656010791469057:qk:9]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16700' x='48000' y='10750' />
        <zone h='22500' id='21' name='Bottom 3 Customers' w='45100' x='2600' y='2750' />
        <zone h='7875' id='26' name='Bottom 3 Customers' param='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_781656010791469057:qk:7]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16800' x='48000' y='2250' />
        <zone h='40750' id='27' name='Customer Profit Segment' w='44500' x='53200' y='34375' />
        <zone h='14750' id='32' name='Customer Profit Segment' param='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442040832:nk]' type-v2='filter' w='13200' x='64300' y='1000' />
        <zone h='12250' id='33' name='Customer Profit Segment' pane-specification-id='2' param='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442040832:nk]' type-v2='color' w='11500' x='88500' y='3375' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1350' minheight='1350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='47' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='46' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='7875' id='26' name='Bottom 3 Customers' param='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_781656010791469057:qk:7]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16800' x='48000' y='2250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='180' h='22500' id='21' is-fixed='true' name='Bottom 3 Customers' w='45100' x='2600' y='2750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='124' h='15500' id='13' is-fixed='true' name='Customer Behaviour' w='39300' x='49900' y='18750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8500' id='19' name='Top N Customer' param='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_781656010791469057:qk:9]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16700' x='48000' y='10750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='200' h='25000' id='14' is-fixed='true' name='Top N Customer' w='46900' x='2000' y='24500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14750' id='32' mode='checkdropdown' name='Customer Profit Segment' param='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442040832:nk]' type-v2='filter' w='13200' x='64300' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40750' id='27' is-fixed='true' name='Customer Profit Segment' w='44500' x='53200' y='34375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12250' id='33' name='Customer Profit Segment' pane-specification-id='2' param='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442040832:nk]' type-v2='color' w='11500' x='88500' y='3375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13500' id='12' mode='checkdropdown' name='Customer Product Sales' param='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Segment:nk]' type-v2='filter' w='10600' x='77500' y='3625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='194' h='24250' id='10' is-fixed='true' name='Customer Product Sales' w='46200' x='2100' y='48625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{03B9AB0F-11A4-4D5F-B855-5F3C45B4C3D2}' />
    </dashboard>
    <dashboard name='Dashboard 3'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='39375' id='3' name='Month on Month Analysis' w='39600' x='800' y='34375' />
        <zone h='32000' id='4' name='Returns Geographic Analysis' w='47500' x='48500' y='2125' />
        <zone h='21500' id='10' name='Return Category Analysis' w='56300' x='42700' y='52125' />
        <zone h='6125' id='9' name='Returns Geographic Analysis' pane-specification-id='0' param='[federated.02gtcc80zihlhl1295smv0bkkecw].[cnt:Returned:qk]' type-v2='color' w='13500' x='82700' y='500' />
        <zone h='27375' id='11' name='Product Profit Analysis' w='46700' x='1100' y='5000' />
        <zone h='7375' id='16' name='Product Profit Analysis' pane-specification-id='1' param='[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Profit:qk]' type-v2='color' w='14000' x='32900' y='1625' />
        <zone h='20000' id='17' name='Salesperson Analysis' w='56500' x='42400' y='33250' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='31' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='30' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='256' h='32000' id='4' is-fixed='true' name='Returns Geographic Analysis' w='47500' x='48500' y='2125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6125' id='9' name='Returns Geographic Analysis' pane-specification-id='0' param='[federated.02gtcc80zihlhl1295smv0bkkecw].[cnt:Returned:qk]' type-v2='color' w='13500' x='82700' y='500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='219' h='27375' id='11' is-fixed='true' name='Product Profit Analysis' w='46700' x='1100' y='5000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7375' id='16' name='Product Profit Analysis' pane-specification-id='1' param='[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Profit:qk]' type-v2='color' w='14000' x='32900' y='1625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='160' h='20000' id='17' is-fixed='true' name='Salesperson Analysis' w='56500' x='42400' y='33250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39375' id='3' is-fixed='true' name='Month on Month Analysis' w='39600' x='800' y='34375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='172' h='21500' id='10' is-fixed='true' name='Return Category Analysis' w='56300' x='42700' y='52125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1FA56CBC-6C0E-4A2B-B781-69E6EA36C2DD}' />
    </dashboard>
    <dashboard name='Final Story' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='3' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Dashboard 1' captured-sheet='Dashboard 1' id='1' />
                  <story-point caption='Dashboard 2' captured-sheet='Dashboard 2' id='2' />
                  <story-point caption='Dashboard 3' captured-sheet='Dashboard 3' id='3' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{5191D373-B418-4145-B457-7BF9893CE462}' />
    </dashboard>
    <dashboard name='Story' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='d1' captured-sheet='Dashboard 1' id='2' />
                  <story-point caption='d2' captured-sheet='Dashboard 2' id='1'>
                    <currentDeltas>
                      <worksheet name='Bottom 3 Customers'>
                        <filter class='categorical' column='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Segment:nk]'>
                          <groupfilter function='empty-level' member='[none:Segment:nk]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Customer Behaviour'>
                        <filter class='categorical' column='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Segment:nk]'>
                          <groupfilter function='empty-level' member='[none:Segment:nk]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Customer Product Sales'>
                        <filter class='categorical' column='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Segment:nk]'>
                          <groupfilter function='empty-level' member='[none:Segment:nk]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Customer Profit Segment'>
                        <filter class='categorical' column='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Segment:nk]'>
                          <groupfilter function='empty-level' member='[none:Segment:nk]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Top N Customer'>
                        <filter class='categorical' column='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Segment:nk]'>
                          <groupfilter function='empty-level' member='[none:Segment:nk]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </currentDeltas>
                    <capturedDeltas />
                  </story-point>
                  <story-point caption='d3' captured-sheet='Dashboard 3' id='3' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{9219EACA-2254-4AD3-9993-A4141D9BBC36}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Map--Sales'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Order Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Country:nk]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Customer ID:nk]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Order Date:qk]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Order ID:nk]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:State:nk]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Sales:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4A9938A2-314C-4B88-B6A4-3A8447769C88}' />
    </window>
    <window class='worksheet' name='Top City Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[:Measure Names]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[io:City Set:nk]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:City:nk]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:State:nk]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_781656010791469057:ok:1]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_781656010791469057:ok:2]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_781656010791469057:ok:4]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_781656010791469057:ok:7]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_781656010791469057:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2B70EC87-33F0-4FF5-A630-34B167C811DD}' />
    </window>
    <window class='worksheet' name='Top SubCategory'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Sub-Category:nk]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_781656010791469057:ok:2]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E741CED1-0348-4FF5-9FA3-4DD01FAD6E4D}' />
    </window>
    <window class='worksheet' name='Top Customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Customer Name:nk]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:State:nk]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_781656010791469057:ok:2]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C1D9D467-2A6E-447F-A655-2150BE8C603E}' />
    </window>
    <window class='worksheet' name='Quantity Analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Segment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[:Measure Names]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Order ID:nk]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Quantity:qk]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1FBFD7D6-E022-4D66-8F24-BF83E03E1E22}' />
    </window>
    <window class='worksheet' name='Total Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C9DA3D79-C4A1-422F-9798-7F0045BDAAE2}' />
    </window>
    <window class='worksheet' name='Total Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Sales:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>2297200.8602999551</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{D6816A8D-6CE4-45E9-8FB7-2AB7C6CB9031}' />
    </window>
    <window class='worksheet' name='Total Orders'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Order ID:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C567FFDA-A26B-4317-9CA4-2E377D86F5BE}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Map--Sales'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Orders'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Profit'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Sales'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{3F6AAFD3-0C03-494D-8F24-E97C1222FA65}' />
    </window>
    <window class='worksheet' name='Customer Profit Segment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442040832:nk]' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='2' param='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442040832:nk]' type='color' />
            <card pane-specification-id='2' param='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442155522:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Customer Name:nk]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442040832:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{56284FEE-82F2-41A5-9387-7072D49259FE}' />
    </window>
    <window class='worksheet' name='Customer Product Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Segment:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Category:nk]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Customer Name:nk]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Product Name:nk]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Segment:nk]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3D373F98-53D5-4FE7-94A9-D00047F37C10}' />
    </window>
    <window class='worksheet' name='Customer Behaviour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Customer Name:nk]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_781656010791469057:ok:10]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_781656010791469057:ok:3]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C036F886-94E6-4EBE-B2F3-D7E069BC4DE4}' />
    </window>
    <window class='worksheet' name='Bottom 3 Customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_781656010791469057:qk:7]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442155522:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Customer Name:nk]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_781656010791469057:ok:18]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_781656010791469057:ok:3]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8551EE52-DC5C-40A4-899C-2EE6EB2FAEB3}' />
    </window>
    <window class='worksheet' name='Top N Customer'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_781656010791469057:qk:9]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442155522:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Customer Name:nk]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_781656010791469057:ok:18]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_781656010791469057:ok:3]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C2BC74F0-1750-43C2-BFCC-F44CF7933E7B}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Bottom 3 Customers' />
        <viewpoint name='Customer Behaviour' />
        <viewpoint name='Customer Product Sales' />
        <viewpoint name='Customer Profit Segment'>
          <zoom type='entire-view' />
          <highlight field='[federated.02gtcc80zihlhl1295smv0bkkecw].[usr:Calculation_609956275442040832:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Top N Customer' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{7AE284F9-3215-4FFE-90A8-82162643F553}' />
    </window>
    <window class='worksheet' name='Month on Month Analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Sales:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[:Measure Names]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[mn:Order Date:ok]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[qr:Order Date:ok]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{296F7007-BDDD-4579-80C3-787B449E3DD1}' />
    </window>
    <window class='worksheet' name='Salesperson Analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Person:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FC1D53E1-58E5-4C09-9BE1-2D6AE1DF55A8}' />
    </window>
    <window class='worksheet' name='Product Profit Analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='143'>
            <card pane-specification-id='1' param='[federated.02gtcc80zihlhl1295smv0bkkecw].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Product Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8CC8A7DE-30CA-47D3-B9D9-E0314F026B00}' />
    </window>
    <window class='worksheet' name='Return Category Analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Category:nk]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Order ID:nk]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Returned:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C5E3DB3E-D929-4909-9F38-F1A1958ED31F}' />
    </window>
    <window class='worksheet' name='Returns Geographic Analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.02gtcc80zihlhl1295smv0bkkecw].[cnt:Returned:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:Returned:nk]</field>
            <field>[federated.02gtcc80zihlhl1295smv0bkkecw].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E0B63A01-D00B-4248-816B-2ED228A85526}' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Month on Month Analysis' />
        <viewpoint name='Product Profit Analysis' />
        <viewpoint name='Return Category Analysis' />
        <viewpoint name='Returns Geographic Analysis'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Salesperson Analysis' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{203BC12C-3870-4DC2-A220-EEE124FF5371}' />
    </window>
    <window class='dashboard' maximized='true' name='Final Story'>
      <viewpoints />
      <active id='3' />
      <simple-id uuid='{09A5B438-11FC-4342-B20D-C55EA2E22E02}' />
    </window>
    <window class='dashboard' name='Story'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{6DA9CA86-2639-4766-B143-049D6BE41340}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='139' name='Bottom 3 Customers' width='192'>
      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
      2v8DoAUiI7k4TdQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Customer Behaviour' width='192'>
      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
      g81mQ61WL8k+nU6nUI1GpVIRHR3N8PCwcK6LdQecn1gwm80kJiYSExPD2NgYc3Nz6HQ6ZmZm
      GB0dJS0tjbCwsP+qnmAf4wP9iNSJxL/Ei/BzsawEv5kse4KXeatZ9gQv89bzZkyRLLPMX4if
      1AECfh/Vl78lcev7BPXfYyCkgC058y9nftrunEWS/wE5rxHrODvZxh/+7QYhsWpy1u3gnXzt
      j3zKz9TYCPKopB+tQfzXwHwgrcfjobS0FJFIRCAQ4Pr16+j1elJTU1mzZg1XrlwBYO/evdTW
      1mIwGDCbzXz66aeLNhPk9/tpbGykpaWF1atXo9FouHnzJm63mx07dgjWwj179qBULt470+Dg
      IA0NDWzduhW1Ws3du3cZGhpiy5YthIeHU1lZSUhICGVlZSgUitdu3+l0UlVVxdTUFOvWrSMv
      71kNu5s3bzIyMkJycjIZGRncuXMHj8dDQkICWVlZ3LlzB6VSyS9+8QvgJX6AubEmTt0aIMjn
      4PCRvczMBtDGK9FPGBl7eBZJyd+TKRqmb8xEclYecpcB/bQNu1tEbm4mxuEeJsxuUnU5RKuC
      MY08prLOx6FtsXxxtYHju9fh9IgQK8NhdpzxWR+6nEzGOxtRZxThmexDb/GSmZ2N+vvzom8w
      Ho8Hi8VCa2srW7duFQaAzWZDIpFw+fJl0tPTiYiIEKx6paWlgp91586di2ZPnJ2d5f79++ze
      vVuwIc4v1bBYLCQlJdHb20teXt6ipdHBs+UVg4ODJCUlIRKJ6OjooLCwkNraWkJCQkhPT2d8
      fJyoqCjS0tJeu32Xy4XVaiU4OJi6ujrhQjPfx9euXePgwYNIpVLa29uRy+WMjY1RUFAgnKdS
      qXzRYjgRofF5hJgeIdcWo8DOlUvlWCbauNcwCoDXYeLi5esE/FbOnC+n5/E1ngzbGKwvp3lk
      jpG+Duprb3C28vF3bQaYHO7mUUMz6sgYnpSfpLJxGJuxlzNnLvPg1mWuVrcw0FbP1NQkF69V
      MW2ZxfkGBMm+DjKZ7AeJxyKRiOnpaU6dOkVycjJZWVnU1tZSXl4urE0ZHh5Go9EsqjfX6XQy
      NjbGV199Jfz4pqenGR8fR6fTER0dvaiV6eeJjIwUSqA6nU6io6NRqVSIxWJ8Ph9hYWFER0cv
      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
      AJlxf121vhaK0+mkuroan88nlCedT4eempoiLi6OrVu3cvbsWbxeL1u2bKG7uxuDwcDk5CR/
      +7d/u2jp0N9naGiIO3fuoFAoKCsrY2xsjNraWlJSUigtLV2SF3W73U55eTlms5kVK1aQmJhI
      eXk5CoWCffv2LXjW68eoqqpiZGSEhIQEdu/ejdfr5Z//+Z85fvw4ExMT1NfXv5onWCQSk6a2
      0zTkINP4lODktThm9Ug0fiYHO2numyQ9M5zZWTsz+l7M/mBcTgm6lEj6RsbJTE/D5/aSXrST
      D/euwuey093Tjd/hJD49ma76BsTR6aSGe3ErE4kQzTFtDWCZ1mO2zBIaEc3stIm0lWuQW4do
      6tGj0RWSrPLQ1z/K9JyHFWtWYhsaxGCZQRaRSmFeMm9CcqhMJmP9+vXU19c/t33nzp34fD6u
      XbuGwWAgOzubrKwsmpubn/MEf99OuZgMDQ2xZ88eHA4HHR0dGI1Gjh8/jkwmW7LZouDgYA4c
      OIDJZBKWe5SVlZGSkrKo+/H7/czOznL8+HGqqqqEQICUlBR8Ph9DQ0McO3aMuro6oTzrTw93
      kZic4tX0NTbR0j5NUX48A40NTJjHOHftCZlZGQRL/Ix1PuLC3Q7CQ2Tcr7qOwdBFfdvkd414
      aL5/jT+c/Ib+MQPnz3yNIzicthunudvUzfVzf6S1b4TbNU10199Db7Jwp7oRlUpC9aNmwoLM
      3H/Yzuz0JKP9nZz5+hqDI2009s4R4hrlUVMXtVXVBMdG0nzrLjPuRe3PBSORSH6gyIpEIgwG
      A99++y1arZa4uDh6e3u5cOECSUlJBAIB+vv7SUlJWZKrcH9/P/fv3yctLY1bt25x+/ZtjEaj
      4FO+cOECLpdr0fcLz/qjo6OD69evo9FokMlkVFVV8eWXXwohtYvBn3uCpVIpMzMziMViQVRM
      T0/n9OnTz5VnfWFPB8fm4Z1qYAwlqaHPrg5+rxOk4Wg0iSiDpYRFReGfsyAJjaFEF8yFq43k
      ry/k2adlrNq8j0+P/4IktYxIbQ6F2RpcNhc5xVv5+JNPKCpchWKqiUajivzUcGQh4STGxxKq
      VqNNiEXsnebJo15WblxPuDiAHxERMfHEx0US8PqQBYeSqE1CKQH/G/z+7vP5UCqVfPzxxwwO
      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
    </thumbnail>
    <thumbnail height='192' name='Customer Product Sales' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Customer Profit Segment' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      rgBcTjX/P1j7IT5wsd0jAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      xszUHVLp1Bbv232eZQL8SD7hML4//qMdyQsMAewYjewK3p4B4tN3uD27hMO88RvaarWSXUnS
      M9DK5Pgs8/E0JvFpQdsF/H4/uS3ft/vs1JxSEIQdPXP4lbACvQqYXD6WpsYIhDrwuSSK1SYu
      23rjVI3kyjItLSFiY/NEom04xAZ1Vcey4dE1KrMz87S2R5ja0n0vBkEQ1m3ooig+kwie9Yzg
      +3l8uQ7GJHiH+KoGx90pntV9+74AnsWa9KQ6GD2AwQvhWSftOzH0eVIdDAEYPFdyqRXml7O0
      tYdo1uq0trdt+XiqhdlpBKsbu6xTV6CtdWuuL4vzU7j97cTmpnAHAkjIuH1rflvGJHgXKaZX
      uHR5mPunG5eU2q7W53lQrDbp9DtYSScpVOvbOptNkiQq5TKxu3cQrVtfiff7vFQrVUJt7ZQy
      aWYXVnFY15wWjR5gFykVClTqdeZGr3P9borjR1r44OeXOHT4IKGOPg72bRx68FWgxediNp6l
      u7UdpdFA02GrRitZlrCKZtqGjtFo1IGtrLbrJJMZsLhp5vKEOzrpECVK1Touu8WYBO8U25l8
      ZhJL3Lg5hmR3oOoiPVEH80tV2v0O5lYLvPeNsy+kHnsZQwA7xMvS8F6WerwqGHMAgz2NIYAd
      wvyM2/d2ipelHq8KxhDIYE9j9AAGexpDAAZ7GkMABnsaQwAGexpDAAZ7GkMABnsaQwAGexpD
      AAZ7GkMABnsaQwAGexpDAAZ7GkMABnsaQwAGexpDAAZ7GkMABnsaQwAGexpDAAZ7GkMABnsa
      QwAGexpDAAZ7GkMABnsaQwAGexpDAAZ7GkMABnsaQwAGexpDAAZ7GkMABnsaQwAGexpDAAZ7
      GkMABnsaQwAGexpDAAZ7GkMABnsaQwAGexpDAAZ7GkMABnsaQwAGexpDAAZ7GkMABnsaQwAG
      expDAAZ7GkMABnsaQwAGexpDAAZ7GkMABnua/x+SqnI1dW1nnQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Final Story' width='192'>
      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
      IhiPa9UiAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Map--Sales' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Month on Month Analysis' width='192'>
      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
      gvDO/i+gMCofzOUW/QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Product Profit Analysis' width='192'>
      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
      gxPN/wM7FBGXSD13qwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Quantity Analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='139' name='Return Category Analysis' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACLCAYAAAA3Q5aoAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAOo0lEQVR4nO3df1iUZb7H8XdN0CCLG4YcfoRiSqKZYkwY/ihdi8TVA1utmscK5coxlLX2
      2HpObnjJVh6Pba5HlB/trJqr5pYuXqWTXFr4o+ggHEctsXSVRZQJUFJ3hJ3xsfPHAA6GIDai
      M/f39Y/M82vua3g+3vc9PN/nue3777//HiEUdfvNboAQN5MEQChNAiCUJgEQSpMACKVJAITS
      JABCaRIAD1NSUnKzm+BVJABCaRIAoTQJgFCaBEAoTQIglCYBEEqTAAilSQCE0iQAQmkSAKE0
      CYBQmgRAKE0CIJQmARBKkwAIpUkAhNIkAEJpEgChNAmAUNpt7d0bVGpQhTdrNwDi1lJSUoLB
      YLjm7c+fP09AQMANbJFnkyGQUJoEQChNAiCUJgEQSrvjZjfAbSwmjNnFLRbFvZhLasxNao/w
      CN4TADrphLeYMJbGktv4RhaTCVJTkZx5Jq8KQKeISSVXznavocAcwIIp04y1+bUVc6YJS9PP
      JjNW2yE2vP4SaY3bWUxLeX/HH1k4Jx2jMY2X3irglNZ0OBOZZqvzuEYj2cXFZBuNGI3Gy8uv
      +n7OHsOinaJw+TzSjY3LbUcxL59HutFI2kuvYSqqRUN0Bq/qAYqzjVyeBYSTvCCDxJB2dtJO
      sMV0hLAJmSy7rys6wEo1NfYJpLw+lVAfG3tNeeyvSSCsxbFiSM3NJfYHQyDrle9whX9QumYt
      urjZvD0zGB80Dn28ky5PvsYfZurROer4YuV6dvdPY+RPO/gBiA7zqgBc1xzgnJ2+KTMZHqRz
      WXgvQxMHEQpAVyIiAql1WyvP0nX4v/PLPv6Nr49g2VPMzoJi1rlsFRcHI2WodcN5VQCuS2Bv
      +rQ4+W+0cKKaT34AB/bA8cxfMo6wTmyFcFJgDqBDZz/LOQfgsFG592OK2huldMhxjhx1ABoO
      h3Yd7xdFv6BC1hWU06ABOLBV7sVS4c42iqtRoAfoT8Ij2/jv2UbqdUH0HR5P7+Bv3Xb06GEx
      fJQ1G2O9jqhJGcwZ1dH30zPk+WmU/08Wr2w8j13nR3CfeJ6a+pDb2iiuTq4G9TByNah7KTAE
      EuLqJABCaRIAoTQJgFCaBEAoTQIglCYBEEpT4A9h6jq/ZIDz35vcjluZ9ABCaRIAoTQ3D4Ec
      nNizmtUf/B8n6sEv+H7GT5/O6Aify5vYDrFhSR47T9QTkryAjMQQtFOFLF/6F776LuTaruHv
      SHt25JH34VdU14NfcB/ik5/j6dggbtT1n1ZzJltCM6QW2UO4NQC2olyySnqTMv95+gXeTkN5
      ITlZS9HNncPIbs5taj77kJoR81n6aCDOWDRQvGkXPWct5VeNQbGaM8ljOhk/MgnaoQ288/Ug
      0hfPJNhHo6HqS7btKqMmdgRuy1ibLJiMpcTmSs3wrcqNAbCy69PbefLXifTTO5foI0cz45ly
      3t5dwcikHgBoWhC9+zad/ADf8d2ZcHq69BIhiRlkuKFFZyoruGfIMwT7AOjQhw4iaaIbDnzN
      YkiVAuJbmvsC0HCcvwUNIUHfcrH+gRiCth/jLL58njmf/JNAfjH5QHhyMuH5+c4yRmMxzWWM
      VhMmUpuHEbZDG1iSt7NxWGVgypxpGH5SS+m6HNYUnaBeF0Dfx2ZgTOqDa6lJ94EGapcsZkP9
      BB4z9ORuvcvAx2omc0soGc1jFQumzCp+npFICFbMWR/w7W1VlB6oxe4bRNzkl0mJD0LX5ror
      uR4TtNpS1uWsoehEPbqAvjw2w0hSH3/QTlGYs5yNB2qdl0MbpjBnmgGpiLzxOvFr0BASM3IZ
      bDaxb3Dq5XF+4mDCMrcQmuEyTHApIKkpeJO/3j2X3/7B9b/usxS+NY/1Rxpfauf5eutifu+7
      oOWwKSSBVxclOH922Kjc+z6mzyJJf2kk3dprrl9vxqTOIqXxZUNRFqsss5yhbGvd1ZwtZMm8
      9Vxu8tdsXfx7fBdkkHjXacorbNzV18CAfjE8PGywnPydxH0B0Peid+0mShpiGeLSCzQctFAb
      9fh1/0J9fX1bWWrHbo9l+orpxF7rbNbHn3seepZx+1ZRwTUE4AoXLtjAr+Prmtnt2GOns2J6
      bCs9xQOkvPlfVB35kmPHD7H+jb2MWpDW4nMUN4YbvwYN4ZFRl9iUY6aszlki2FC+g5z1dQwd
      0eO6j/rTgQYubN98+Zinq6ht6E70/RVsWm+hzkHj8jJKD59tsW/NZx9gLqvG5gBwYDtmZtvJ
      IOfJr9Nxxz/Ock4DreE0ZeZCylx31uppaDp2+Q7e3RlEbPQ1rLua7tHcX7GJ9ZY6nLs2cLqs
      lMNnAWsZ+6s0gqINDEtIJrE/nJW/XnUKtw6B/OONzNJWs3rB7Mtfg86a3fwN0HXpNpIXxm9g
      SfMxG+cA49J4PCebBbOzqdd8CYgcxLhJU1rsGtArnHPvLWPe0erGbeJ4Jn0yPQC6D2NstzeZ
      l7YOzS+CB8f3JcJ159pdZL2ynfMuX+fG6K9h3VX1YFza4+RkL2B2dj2abwCRg8YxaQpw6Z8c
      WDmfP5Y7SyKjnpjFi91/xGcmrpmURLbKitm0j8Gpia18XdrWuhuvIyWRTZdCiKuTvwQLpUkP
      4GGkB3AvuRrUiwW8/KXcFaIdMgQSSpMACKVJAITSJABCaRIAoTQJgFCaBEAo7db9O4DVTOb8
      fE7+YEUcL15PhZXVjGnfYFLdV2+J8/lfV1zKLTzKrRuAkEQychMBqbMVN44MgYTSbt0eoD22
      o5hXrWTrgVo0v2BiJ85uLkvUThWSs3wjB2rt+AZEMuZX/8nPfUGrLmHD20Xs+boWu28Yj8+c
      y9PResCCaekRIv2PYt5fznnNj6jk3/ByQhg6NGpL15Gzpsh5OXZEPM/OmExsa88Vc2mT3TeI
      gWOnkpLYWKapuZRwar4ERQYxMHE+E6OKWLEank+Lby7nPLNjGVtD05jSvzOfXaYmDw1AG48W
      /clhNrxjIfqFxcyI1HPJVkmdHfgnnKs8R/9n5vD2vYFwYjMLCw5DdOO4qroG+4QUXp8aio9t
      L6a8/dQkhBFiLSBvmz9PzV9Kv0CoK/uQ7LwCwl+98nLoBizvvcvxQbNYPCMUH0cVRX/K5j3L
      q6TG6Kn4aBnb/Ccxf2k/An0clG96gx0A/nGM7LqI7RXxOO8bUMHugz14ZLSc/J3BQwPQxqNF
      dV9wNHYCkyOdFSo6/3sI9gesEPjgzxh+b6Bz44iehLse8t6hJA5yPhiVrhFEBDofjFpzYB9B
      T8ylX6DzhAzsl8QTuxdxoCaRkBZFK0ewnIwjOTUUPYAulOHJcXxScARiuvPVtw+RMr0fznf3
      Qe/XNPrU0X/sEHZsPYQ2pT+6w3uoeGAMSW77rERbPDQAbTxa9LAvd96MJrXpEhq6q0+4ug0j
      7lwWhWf6Elpymv5jf0wJnegID50Et/Fo0agHiSjNZ09VAxrgsFVSXXf979R94GBqtzXVJDuo
      K9vMttrBDPxByWIUMeHF5O+pokEDraGKPfnFhMdEAf/CvV2K2LSnGgfOdeWV9S776jH8LIyS
      go3stsUxTM7/TuOhPUAbjxbVRTPxBSs5Wa+w5opJ8HUJSWD6E+vIaapJjojn2RlJrZRD6omZ
      9BxVq7J4ZY3LJLixWLj/LyZxcMmbzF5Tjy5oILGhLffWRY/BsPl3VI1/CrkZROeRirBOUnfi
      GI5uEQT7+4Cjji9WZvPtmFcbJ76gnStlVXYlj89Noq17aMhjUt3LQ3sAz3P+63ze+ego1fUa
      NPUOjWe6xWQk72AUyb95uc2TX7if9AAeRnoA9/LQSbAQ7iEBEEprdwhUUlLSWW0RotPJHMDD
      dHQOcOHCBbp06XIDW+TZZAgklCYBEEqTAAilSQCE0iQAXk4mwG2TAAilSQCE0iQAQmkSAKE0
      CYBQmgTAW9iOYl4+j3SjEWP6HBZuqWheZTGZsLhs2nBwFQv+fMj5uFaFWQvelIIY73CGwux3
      OP7wSyyeEYr+ko3KOnvrm9osrN3ky8Tf9sencxt5a7EV8UHJQOkBvELFbj7t8iTThoei1wE+
      /twTHNjKhjYs720j8LmJRCt92yEbpWs/IzIlUQLgDc4eO0L4EEO7xfS20rVsDZxAUi+lz360
      w5vZHvQUiWE6GQJ5g/p6H+orV7Jw/X7Kz9vR+UUQ/+wMJsc6bxUJxWQbi0E/hLS3eqH06a8d
      Z/PHeiakOz8HCYCXuLPXGKY9PZUAvQ5HXRn5y0wU9prL6G7QdEv5qKIsMt8/zIDJ0cqGwFqw
      mYYx6TR1ghIALxDSqzuOk10I0Dt/qz6B/Rjx0PtsqQBcbrLlHz+VZw69xSrLHFJj/Fs/mFc7
      yMcfllGkpbGzcYkEwBtExRO++V129J7ByEg9l+rK2L0viAGjrtzQn5iUF6hctJKiqFnEK5eB
      B0hZkUuKyxKZBHsDXS+SUkdw6s//QbrRyK/fyOdS8vMMaW1WrAsjMaU3u7LMnNI6vaW3HKkJ
      9jAdrQkWbZMeQChNAiCUJgEQSpMACKVJAITSJABCaRIAoTQJgFCaBEAoTQIglCYBEEqTAAil
      SQCE0iQAQmkSAOElLlL1yUKmJYzAYDAwImEay0pt7e4lFWHCK5zb9TtS5pXzrys2kze4G5eq
      S9h+9Dug7bI3CYDwAvsxvVHAgNe2MXNwV+eiYANjg9vfU4ZAwvP93ULJ6RiGDuna6uqLxzYy
      5+lRxBsMxI96loWfVHERgF0SAOEFGuq5QDDd725l3cVSlry4nO//7V12lpSwM3cUh+fNxPSN
      c7UEQHg+vR9dqKbmdCvrvvmCXb5PkfqLCHwB3/umkZpQwa6ivwMSAOENeg4gpquFz//3XId3
      lQAILxCLcc5QPl86j9X7znARsFeXsPXzk3Dfwzxi34jpryewA/Zv/oSpoAePxPcEJADCS3Qd
      u4hNc8PYOTeJhw0GRk9Zwd/uvAvuiOXl7JnctvY5HjUYeNT4KdFvLCf1PoAYuS+Qp5H7ArmX
      9ABCaRIAoTQJgFCaBEAoTQIglCYBEEr7f/+eU8a/YyV0AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Returns Geographic Analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='159' name='Salesperson Analysis' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Story' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='44' name='Top City Sales' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAAsCAYAAAAzWrf+AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFBElEQVR4nO3ccUzUZRzH8bd2qxaOXK7YdItFDFuzif4e4aDAwA03uc1CrHkgmjhBnbPM
      5h9OLmPOkJY20KIJAosUBRsuXCPF3VkodKRsYsUmwpxDmzC7mS247emPDncCJhyctP2+r+3+
      eZ7f73meu93neZ7f73e7KVprjRAmNXWyByDEZJIACFOTAAhTkwAIU5MACFOTAAhTkwAIU5MA
      CFOTAAhTkwAIU5MACFOTAAhTkwAIU5MACFOTAAhTkwAIU5MACFOTAAhTkwAIU5MACFOTAAhT
      kwAIU5MACFOTAAhTkwAIU5MACFOTAAhTszzsALfb/SjGIcSkmCJ/jivMTLZAwtQkAMLUJADC
      1CQAwtTGEYBuKjIUSq2l+qZfscuByqige9xD8+elsywDlVZCh39py8ckLy6k1RtAk6Mdp7eH
      xt1rSElQKJVAypoiWv8MoD/xvzTuFSA6GkoOtRDId3D0LERkbSb9djVVrsFv301qv6xj3uYc
      jIfezA2UB1f+arb/alBQdx63+zRfbXiRv28DuHAohcPlOzQowRfBNu4AzLKvI+VMNQ2eiRjO
      f7DE8M7G2TRUfstNwNtaSVlfJtkpocHrs62UXQ1z2FG0kXnPWIDHeU4tIX4WQCI73W52Jgav
      exF8478GsMSQlnaVg4c7Rqj00lm7lTcSFErFkbRyLy0egFYKk5MpbPUd1lpIslJsb/StI721
      rI9z4BqyrIQtXUvatRIOtVyn7uAJ5uas5uXB2d/bSe3WdJLiFCouiZW7G+nxnd9dkYFyuPC0
      7GVFgt+sPcjjIt9mw9HYd99K1n3RTW90PLEjZsyFQ2VQ0e1rf0s9/FbEMqVQyoHLc5L34/ze
      I9BamEza/stBXi3FmOiAdelyu6HznFprPaDde1J09pEbWjvztGEv111a6/ZimzYM4/6Xr27A
      maetuTX6lr6la3Jzdc0Np857s1i36wHtzLPqLfV3Ru52oE3vsxlD6tt1sc2mi9v9ivzG0VVu
      14a9VF8ZGFLvG1NmWaf2r7r3Dsvt2sit0bdGHIhT5xl2Xd41vD+/BrTd+oH+7o7W2r1HJ2Uf
      0Tce/IGKSTBBd4EsGFlroKxy2AVpaPoBzrvduAdfVasIByxGLPE/NdHsaeNnjxUVZhD7wiV+
      6W2j+Ww08bEhD+jqaaaHwrRpD6h/kMhIIoZeK8zexNGjm5ha9iFVncPn5fA50YRebKI50O1d
      eDpZCec4/YOHlu9PoZbbCAuwKREcE3cbNMzG8rkn+Lr+9r2iqAWvQt1+Si78u7Xw3u3h0rnL
      9AKExBK/oInmkha64hcQTghz59+l6eApXBGv89qMsXQehTWxn9rSb7jWD/R3UFbawPOJcYQ/
      5MzHIlax592n+GJHJcMyYOSwNb6Jz7ZXcKHPC/Tzu/skTddHaChkGqE9HXT0ecHr9W1zQliU
      nor7mIPDzUmkLxpjaEXQTeBzgBAWr83kqvPHeyWWmA3sy32WM1tSsSpFQuomDlz6iycBmIGy
      RlBfXUfkK1EAzJoXQ8exY4QmWMc4U1ow3vucjVOqyFqoUAtzOPPSLvZnR43q7LBlBRREVrM+
      38X9k30oSwqOs22mk21LrSi1iMwDV3hi+giNGG+xeX47H6VYUUmFDG79LTFpvN13lrbYZOYH
      7W6VCJT8GC7IvH2N5K8oZmbRcXJGl0fxCMmT4CByORTW1E/5Y90njHIxEo/YPzaSEJTr/DwC
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='124' name='Top Customers' width='192'>
      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
    </thumbnail>
    <thumbnail height='120' name='Top N Customer' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAB4CAYAAACkRf0fAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAALJUlEQVR4nO3df1RUZR7H8bfdhgYJE0UCkUySFWEVCMOlpaNtxR5aT3C2wl/RYuw6hsdF
      U/eczdU9uK11Fg+dMhE00pU0f6we2VzQjrbuqlm2Iz8shSQy0ZoFBBFhpuHc2D8GV0QUAXGY
      nu/rL7j3uc99Hrifuc+duc+dAa2tra0Ioag7nN0AIZxJAiCUJgEQSpMACKVJAITSJABCaRIA
      oTQJgFCaBEAoTQIglCYBEEqTAAilSQCE0iQAQmkSAKE0CYBQmgRAKE0CIJQmARBKkwAIpUkA
      hNIkAEJpEgChNAmAUJoEQChNAiCUJgEQSpMACKVJAFxMc3Ozs5vQrzQ2NvZqewmAUJoEQCjt
      Tmc3QHTf9+9Pc3YT+g0P4PtebC9nAKE0CYBQWv8PQEsV+1cvZX6qCVPqfJZmbsVcq9+GHReT
      azKx4N0TdNyb7ZMsUk0mcos739JSuLzdumJylxdi6cOWip7r5wHQObF1HeVh88jIyiFn1Wuk
      Pmak4mTN7dl9VAKxlmOUX5UAGyVmOzGT/NstKybXlMt18iD6sX4egDrOnhnBxGgfDACaEb+w
      eKY+4nub9u9HRKiFY+0TYCvBbA/nQa/25cJJyUkh/Da1Stw6/fxdoGGMn1DL6xlbsSY+zoSR
      QzFq7VbrtZg3Z5N3pAqr5smYx+dgih+NB3BmXybrdldQbdXR3AOYNHsBU0M8AAuFa/ei33Oe
      T45UUG3V8I5J4eWkcDw6aYFvRCiWfeXoISFogK3EjD18JoOt/25Xqpjc5d/yi2VxdBVNvdbM
      5uw8jlRZ0TzH8PgcE/GjPRx15EJy3AWyV++gNDCFnBSJVF/r5wEA39jFLLy3gO3r/8TmCx6E
      PjmL5DjHQV53YA+VE+aSkeSFQbdxevdb5JctYkYweI5JYH7MSIYaNXTbSba/c5iakFiGAVw8
      y8WQ6byUEYgXVeS/+gGnCO/8Fdx3IhH1BZTrIYRoNkrMMPGFe+CfPelNHQf2VDJhbgZJXgZ0
      22l2v5VP2aIZBANcMpO3SSMqLZO5PoYe/83Ezev3AQADPmHxzA2Lp6XpLMXbc1l3YB7zJ2uU
      Fh1k37aD7GtX2t/NAsG+uDWWkrP2TSqqrW0XsVEEgyMAXg/ys5hAHKOYAEb6d9xne0OICKmn
      oFwnZEwZnxHBTCNc6ElXGkopOriPbQevajFtTYaGQcQsfJbRnZ2KRJ9wgQBcYfAYwUNJUyja
      cAYm+2O3RzI7azaRWseSx9m+q4W4lzIY62UALBQu/0eP9zskIoT6gnJa7Ga+i5iJsacV2e3Y
      I2eTNTuSa5oM4B8kB/9t1s8vgms4/LdCTlY30QLQ0kRl4V7OeQ8BhhEceoad7xVT3wKgYzt/
      EnNZA+h27B5D8b3bAC1NnC35iM/re9GMIRGE1H/K1qPfERHR48MfhgUTemYn7xXXO/qj2zh/
      0kxZQy/aJnqln58BPBnlf5Etq5Y4hjJuntwfNZ15M+4D4L4pqTyRvYb0tDVYdTc87w9jyrTn
      QAtnytjXSU/bilXzZvyTsYy4p1cJICLEwo7yyTzTi+Mf7mNK6hNkr0knbU1bf8KmMO253tQp
      emNAa2trq7MbIW5ec3Mzxv0vOLsZPxj9fAgkRN+SAAilyRDIxTQ3NzNw4EBnN6PfaGxsxNPT
      s8fbyxlAKE0CIJQmARBK6+efA4jO/Dgpw9lN+MGQM4BQmgRAKK3PhkCWwuX8cde5a1dEvdj/
      73PXazFvXsd7R0/TqLvjE/okL6TEMsrouGc/pU/bb6Ewt4iIlK7nFoje67MA+MYtIycOLt+J
      6bfMVWZM2Tiel8HeQcksyRyL1x02zn9RxDeN0PPbQEV/JRfBHdUdZu+lBNKSx7bNEDMydGw0
      Q53cLNE3nBSABko3ZbHx49M02sHNezxPz53D5OEaUEzuX8zcfWclh8pr0d2DSPj1o9R/sJND
      5bXgPYnZS2cwzggNpZvI2vgxpx2VMP7pucyZPBwNKHbML+RC9mp2lAaSkpPCqBuUv0z/6kuM
      kc93Oj0SgEun2P/2bt4/VoWVwYROX8BvH/Htuk9vnOJ+jwoKSxzDqqCE37Eg1rHvpopCNqwv
      oLTWjubuiZvPY0T07T9AtHFSAO7COyaJ9MQReBigpf5DcvJPMDl5nGN1AwS++DK/HOGB3byW
      FXu+JnHmUp7xM1D3wUr+XgbjwuEu7xiS0hMZ4aiED3PyOTE5GUctlzDnbUKLSiNzrmNSve2G
      5R1qqi24+91grFNdgz0xhddm+WFo+pTctUVYHonDt6s+VddgT0zmlf9vV0JN7HB8bZ/w13Vf
      ETY/gzl+RrBVkr+xvE/+6uJaTgqAAc7t4c1VJY5XYwD/BCyMc1z4BUby0AjHa7DBP4DA0AjC
      2g7KYT7e7Wo5x543V1FyuhFHLf4kWGCcL0ADg2IW8my7KVY3Lk9b/b5YrTauO+APfJi4MD/H
      z4MCCPCqvck+XWe7ss+4M9FEjF/becg4EPdOp4uJvuCcANTsZ9uxIJJfmYWfsW2IsPzb7lbC
      /m3HCEp+hVl+xrZhz3Ku1OJP0FXzC7sq76CNegDb5iKaoqOvPwy6hX3SdR1NkyPeWZzzOUCL
      nQHePngZNHTbeSoPmansfiXYB3jj42VA022crzyE+YaV3GT5IT/l53fv4o2dJx1TLXUb508e
      4XhXz+LqYZ80/wD+W7CTLy7qQAtNZ8v5sjeT10S3OOcMMPxRJrWsYHFqLbp7ANEzJxBAd+/K
      Hs6jk1pYsTiVWt2dgOiZTAjgBrXcbHkj45IWY9+cTXpaFVYufw7QR33yjSX54WxWL2lr14NR
      DDZ6db2duCVkPoCLaW5uJsq02tnN+MGQWyGE0iQAQmkyBHIxMiXyajIlUohekDOAi5GvSb21
      5GY4FyRDoCt6OySUIZBQmgRAKE0CIJQmARBKk3eBhNLkDCCUJgEQSpMACKVJAITSJABCaRIA
      F9ZUkc/K+amYTPNYsvoA3+hX1hXn5lLcrqzt+AbS3z3h+HZKl9NC9ad5vLpoHiaTiXmLMsmv
      aPr/2t70VQLgqmzFbNl4jp+8/AY5WX/mV34fkbP7TOdlm4rZtNONqdNDcMnvnz++hTWfj2Lq
      kkxycrLIWBhJ1fp8yjor282+SgBclK3oELWTphHjYwBtED+KTyCo5D98dU3JJoq37MXr+akE
      u+rDJ0Jm8IfkGAK9DICG0S+G6JFWbNcU7H5fJQAu6sIFCAoccmWBNoaxvrXU6VeXazJvosAr
      kfhRrnr0A5p21dP7miryOeweRXCHYj3pq9wO7aLs392Bu3v7JRqaZuHbGnA8iesoa0xHwTiR
      1JWjcOHD/wr9Il/sfpvdPIUpaXS7R5f1vK9yBnBRbnd9j9XafomOrvviM+zy71G8mJND5rRm
      Nm8vQ7+2CtfSUkVhdh5fhpp4KX50h4eW9byvEgAXNXgwnKqsu7JAL+ekxZshHV7+PKJnMd26
      lQ3FTbiuOg68sx+fpDnEjb7+8/p60lcJgIsyRsTg/a8tHKpucQwN8ndxKmwCo64p6UF48m+4
      t2A9R1w1A2V7OD76KSIHdTW46X5f5RrAVRnDmfb816xZkUaeVcM7agYLku/rvKw2nLjkB1j5
      ViEjF8Ux3MUuCGrOnOazHb/HtK39Un8S0pcR1/FrdLrZV7kdWihNhkBCaRIAoTQJgFCaBEAo
      TQIglCYBEEqTAAilSQCE0iQAQmkSAKE0CYBQmgRAKE0CIJQmARBKkwAIpUkAhNIkAEJpEgCh
      NAmAUJoEQChNAiCUJgEQSpMACKVJAITSJABCaRIAoTQJgFCaBEAoTQIglCYBEEr7H3Wu9aqS
      kBmEAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='84' name='Top SubCategory' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABUCAYAAADUKzhSAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAIT0lEQVR4nO3de1BU5xnH8W8aIAQiTTCNF6yXemFo1MF6dFzMbiDaNVYMGryMbg0pTGJG
      x4oKXko6lJEVYhS1Jh1tAnbpUDsaYqhBq1YqSyIWl9axzdQkdmGx1MtEHVEuIsb+saxiBgZ1
      z0LkfT4z+8dy9rzve5j9cd5z43nk1q1btxBCUd/p7gEI0Z0kAEJpEgChNAmAUJoEQChNAiCU
      JgEQSpMACKVJAITSJABCaRIAoTQJgFCaBEAoTQIglCYBEEqTAAilSQCE0iQAQmkSAKE0CYBQ
      mgRAKE0CIJQmARBKkwAIpUkAhNIkAEJpEgChNL/OPuBwOLpiHEJ0i0fkn+MKlckUSChNAiCU
      JgEQSpMACKV5EQAXNouGpnleBmJmLWJbRZ3Xg3LZLGjpdq/bEaIzXu8BpuU4cDgcOByl5Mff
      wrZ6O5WAJyAWm8vrQQrhKzpOgQL4ftQEflB3jXoABpFQ4KAgYZB+XQihM90C0NJQxd53/8BX
      cVMYC3j2AJ6ZjD1dY641j6xEM0ZNwxCbTJFn59BylpKsBcQYNDRDDEt3n23Tch0Vm1qXaUZm
      pBTibLnTpsXmxFmYTKzBgs0FLc5CUmYY3dMyo5nEHZ/rtYmiB+r0SnBnipdrFAPwBENmrCR3
      ZRTBHXy2obE/szd/zJqga+xZYWbXERdxCYP4IncxaadiyTu8g4igr/n3bxaw4Lx7nfOFq9jQ
      vIjCMgOhXKJk7TxSckfx4cIRANSVWMke+Sp5pUaeCWjiwMosbiQc5NjMUGg4y4nTzd5uoujB
      vA7AtBwHGSaguY7TBzJJmv4Z64pTGdtOyyHDIxgWEgCE0vtJz09dlNtrMC9MJCLI/ZOgYM/K
      9VQePY6z9Djm3W07PQe4A1A/wMKGVCMhAAQyZOhAKn69lNXVk3neaGJS5BBvN1H0YPodAwSE
      MGx6LBMuluNw6tYqAJGpxa0H2q2vDNPtZf1GDG398ruNWPhHira+wfjHv2R/5itMWVbEeX2H
      I3oQHQ+Cm7lw6DDH/MPo2/t+1gsjYlQIZQf2c6EZWhrOUvVfz6nUYMaOj+RE3kb2nnFPZZrr
      TlN2vKMzSxep3Pc36gaOY84bmWxOn8mTjpP8x4utEj2bjscA8HjoaF7euIFp9xUAP8Yvymb6
      4lXERf0SvwHRmIcCT7iX9olfy3pnGtnzo8hodPcRsyIdY7ttBULtTlbHraT66g38ew1mYsp6
      xnuxfaJnk7tBhdLkVgihNAmAUJoEQChNAiCU1ulZoIaGhq4YhxDdQvYAQmkSAKE0CYBQmgRA
      KE0CIJTmxb1ANRQk/ZTtX7a+9e9FeMwS0ta8yOBHdRmbED7n9R5gSpYdu93OX/fmYDzzNsnb
      /qnHuIToErpNgR4NCscy38Slv5+kRq9GhfAxnx0DXDySxatxZkwmEyZzHMvzT+G+pFZDQZKJ
      JdYNvDZtEiaTmXnWg5y72bpiXSXvvjaNSSYTJvM80oqqcS/6FKspiYLqaopWzWJSUoEETXjN
      6+cBDqwxcQAg8CmeNS9n12+fpy9Q9/RAwnr5c+ZyEzeaLuN4/232ROdiGeher290CmlpKQDU
      FCQxJzsY+7J6fhGbySeexptqKdv4CtlP20mbCHCe065Q0t/6gDhvBy4EOgRgSpbny9nWP9ix
      eicBS3/H/h9/jwA+xWrK67CNr2+24O/nOXIezdIP3iH+mfY+2YdhQ0LaWyDEA/HRFOg6TY1B
      hPb5LgE3G3AdreCbjwlfv976iGPtPnI/vMgLz42GoEjGjj7J77fuo7YZoJmrzqNUylxH+IjX
      e4D2jWPu6/1YvGwyHwWGE5M4hm8+JXlsy2zMv7pMU2AYxoWbSZ0YBAQx4821VGXk8LPJ2TQR
      yFPPmliyJso3wxTK6/SRSP3vBnVfP6hObG/qJETXkivBQmndsAcQ4ttD9gBCaRIAoTT5v0BC
      abIHEEqTAAilSQCE0iQAQmkSAKE0HcukamhaOt1V3FRKq4oHoWOZVAcORwamzle5TzqUW3XZ
      sGjuInpCtOWju0H15C63muBVEwkUOLxqQfRQvjkGsKffPR1p+96ejmax4XQWkhxrcP9ld9mw
      aEvZYkthVowBTTMyb2tla73hu8ut1lVsYkGMAU3TMMTMIuMvF+/0879ytqfMcpdUNSZR4Kmn
      6rJhuT09s5OuzcWal0Wi2YimGYhNLuJOxdYSshbEYGhtf9Hrs1l7L32Lh5LXAShe3uYYwGLj
      nmYZdSVYs53E55W2KaTdQNDYFeQfKufoezO5ZvtTa8X5tr5gZ3YJY3JKcTgclBZl81L/tstD
      mbgin0PlR3lv5gXeKajoYAANNPafzeaPyzh2cCVDP9nFEZe7/dzFaZyakEPxMQflh9YReaWK
      lnvqWzyM9CuTej/qB2DZkIrxrqcb+xM+sh9BAKG9CeFKOyuGMXjYV2RmJHPpxWimPhfNuJFt
      HrXpH87Ifu5aq6G9Q7hxpaWDAYQwPGIY7oqtvblTsbUce80LJC0cQ6gfwGM8dvs31Enf4qHU
      PadB+41g6AM92hvMlHWHyX9zKsMbK9i2JJ6XN1XS0df8wfjh1+6fha7oW3Q13wWg9gy1LdB8
      4V/sPXxSp0Y/x77fSeAPp5KwLJstP/8R506c0q8OcFgEo0LKKNpzhmag+UIVtyu2+rpv0S18
      cxYochLxOWnETdhG6OifkBoTDqf1aDiQxuNvkbD+JJdaS6ZaMqcTBvd27NEZv/Esyp7O4lVz
      iLL6MSDazJ2KrR33LR5ecjv0Xeo5W3WZ4LABhAS00FC1mxXzDxP90fvM7dPdYxO+8BBcB+hK
      TXyWn4z1z9VcvQH+vSJ4ybqeePny91j/Byj8zWzOnfqzAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total Orders' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACLUlEQVR4nO3TsRGEMBDAwPsf+i+U3KSmCxxotwIl+u2990DUNTPzPM+stU63wOeumZm1
      1tz3fboFPvc/HQAnGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCk
      GYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoB
      SDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0
      A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMA
      aQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5Bm
      ANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYg
      zQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIM
      QJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCk
      GYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoB
      SDMAaQYgzQCkGYA0A5BmANIMQNoLfIEQ3tIWSUMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='24' name='Total Profit' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAYAAABKtPtEAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAEQ0lEQVRYhe2Xz0tUXRjHP/fOuXpnpB9Wi6mU0CDc2IioE0MuSmikRYSa0EL8QQvD/8Kl
      S6mNi4hiWhSVBi1UaApUXChDmEYRTLnIoZkaGWa4V++Zc1tI8zL5vvDSa9wX8ru7D+c+z/f5
      nu/hPEdzXdflD4buNQGvsS+A1wS8hvg5sLq66gUPz/DHO2BfAK8JeI19Abwm4DX2BfCagNfY
      F8BrAl5j1yT4q0in08RiMVZWVgBoa2ujv78f0zTZ3t7m4cOHvHz5EikloVCIgYEBqqurAchm
      s9y9e5fXr18jhODy5ct0dXWV5V9cXOTJkyek02l0XaepqYmhoSGqqqpwHIdHjx7x4sULXNfl
      /PnzXL9+HdM0mZyc5OnTp2W5dF1nZGSElpYWtJ+fw78yCtu2zZ07d2hubqalpQUpJY8fP+bY
      sWNEo1Gmp6fJZDJ0d3cjhCAej/P+/XuGh4eRUnL79m0aGxu5cOECruuSyWQ4fvx4Kb9Sivn5
      eerr6zlx4gRSSqamplBK0dvby/T0NNlslqtXryKE4Pnz5ziOQ09Pzy6ulmVx//59rl27RnV1
      9d4cgYqKCm7evMm5c+cQQmCaJq2trSilANjY2CAcDmOaJkIIIpEIBw8eZHt7m2QySSAQ4OLF
      iwghMAyjrHnY2bH29nZOnjyJpmkYhsHZs2eRUgI77uvo6Cjlv3TpEvl8nnw+v4vr27dvOXXq
      VMl9eyKArutomlb6tm2bubk5zpw5A0AoFCIej2PbNlJKFhYWOHr0KH6/n0+fPhEKhfD5fP+q
      lpSStbU1nj17RiQSAXY24NWrV0gpUUphWRaFQmGXAFtbWywvLxMKhf7i/l+b/wGlFAsLC9y7
      dw+AoaEhTp8+DewI8kNxAMMw+Pr1K8ViEcdxyOfzWJYFQCqVYmxs7B/r+Hw+jhw5wuHDh9nY
      2ACgt7eXnp4ehBDouk4gEEDTNCorK0v/FYtFYrEY0WiUYDC49wKsrKyQyWTo6+vDNM1S3LZt
      EolEmUXD4TC5XI5cLkdtbS1KKfx+PwDBYLDknL+DpmkEg0G6u7tJJBLYtr1rTSqVQkpJIBAo
      xZLJJKZpUlNTU7Z2TwRwHIdEIkF7e3vZUYAdex44cIC5uTkcx8F1XVZXVykUClRUVFBfX8/a
      2hrv3r1DKUUqlSKZTJblyOVyzM7O8u3bN5RSSClZWlrCdV0Mw2Bzc5MvX76glCKdTvPgwQPC
      4XDJAUoplpaWiEQi6Hp5y3tyDebzed68eUM8Hi+Lt7W1MTIyQldXF7FYjOHhYYrFInV1ddy4
      cYOqqipgx8ITExOsr69z6NAh+vr62NraYnx8nGg0SkNDA5ZlMTo6SjabRQhBY2Mj/f39+Hw+
      LMvi1q1bfP78Gb/fz5UrV2htbS3xWF9fp1AoUFtbu4v7nlyDvwMfP35kZmaGwcFBDMP4bXX+
      t5Pghw8f6Ozs/K3NA3wHXMXBccglljkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total Sales' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACQUlEQVR4nO3ToXXEQBAFwdE9YQfg/JOz+IquqZ2ABLqKDftg+th774Goc2bmvu9Za729
      BR53zsystea6rre3wOPOv8fP1/fs4/PWFnjcvwD28REAKb6dNAGQJgDSBECaAEgTAGkCIE0A
      pAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECa
      AEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmA
      NAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgT
      AGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQ
      JgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkC
      IE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDS
      BECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0A
      pAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECa
      AEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSfgGIGRT5RtksHAAAAABJ
      RU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
